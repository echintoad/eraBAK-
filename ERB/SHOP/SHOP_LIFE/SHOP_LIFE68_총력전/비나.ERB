; ===== 개발노트 =====
; CSV 에서 설정 가능하지 않을까?
; 비효율적 이거나...
; 	CSV 세팅 해놔도 여기서 function 해놔야 되면
; 메모리 낭비하거나...
; 	보스 하고 있는것도 아닌데 메모리에 보스 정보 차지하고 있으면
; 	CSV 해노면 메모리 차지하나?
; 3  Binah
; 12 Beth
; 14 Daleth
; 17 Zayin
; 18 Cheth
; ====================
; 보스 팀 이름, 예 시로 앤 쿠로
@총력전_보스_이름_0
RESULTS = 비나
; RESULTS = בִּינָה

; 임시
; 나중에 csv에 총력전_보스_번호 로 변경
; 보스 선택창 이미지, 총력전시 이미지는 보스_설정 에서
@총력전_보스_이미지_0
RESULTS = 비나
; @총력전_보스_선택이미지_0
; RESULTS = 비나

; 총력전_보스_난이도 가 있는데?
; 총력전 최대 턴수
@총력전_보스_턴_종료_0 ;(난이도)
; #DIM 난이도
RETURN 32

; 보스 스탯 설정
; 보스가 여럿 있을시 등등, 스탯 개별 설정 보다 이렇는게 더 유연(?)함
@총력전_보스_설정_0
#DIM 난이도계수, 2 ; 필요하면 다차원 배열
#DIM CONST 보스번호 = 10
; 상태
총력전_상태:보스번호 = 총력전_상태_보스
; ID?
; 총력전_ID:보스번호 = -1 ; 필요없을수도...
; 토벌 이름
CALL 총력전_보스_이름_0
총력전_보스_이름 = %RESULTS%
; 캐릭터 카드 이름
총력전_이름:보스번호 = 비나
; 위치, 10 -> 12, 중앙으로 이동
CALL 총력전_이동_번호(보스번호, 12)
; 팀
총력전_팀:보스번호 = 1
; 이미지... 임시
; 나중에 csv에 총력전_보스_번호 로 변경
총력전_이미지_초기:보스번호 = 비나
총력전_이미지:보스번호 = %총력전_이미지_초기:보스번호%

; 스탯
SELECTCASE 총력전_보스_난이도
	CASE 0
		난이도계수 = 42
		난이도계수:1 = 72
	CASE 1
		난이도계수 = 55
		난이도계수:1 = 76
	CASE 2
		난이도계수 = 69
		난이도계수:1 = 82
	CASE 3
		난이도계수 = 84
		난이도계수:1 = 90
	CASEELSE
		난이도계수 = 100
		난이도계수:1 = 100
ENDSELECT
; 체력
총력전_최대체력_최초:보스번호 = 40000 * 난이도계수 / 100
; 공격력
총력전_공격력_최초:보스번호 = 480 * 난이도계수 / 100
; 방어력
총력전_방어력_최초:보스번호 = 570 * 난이도계수 / 100
; 명중률
총력전_명중률_최초:보스번호 = 220 * 난이도계수:1 / 100
; 회피율
총력전_회피율_최초:보스번호 = 50 * 난이도계수 / 100
; 치유력
총력전_치유력_최초:보스번호 = 10
; 치명타
총력전_치명타_최초:보스번호 = 40
; 치명타 저항
SELECTCASE 난이도계수
	CASE 0, 1
		총력전_치명타_저항_최초:보스번호 = 30
	CASE 2
		총력전_치명타_저항_최초:보스번호 = 50
	CASEELSE
		총력전_치명타_저항_최초:보스번호 = 100
ENDSELECT
; 총력전_치명타_저항_최초:보스번호 = 100 * 난이도계수 / 100
; 치명타 대미지
SELECTCASE 난이도계수
	CASE 0, 1, 2
		총력전_치명타_저항_최초:보스번호 = 150
	CASEELSE
		총력전_치명타_저항_최초:보스번호 = 200
ENDSELECT
총력전_치명타_대미지_최초:보스번호 = 150
; 치명타 대미지 저항
총력전_치명타_대미지_저항_최초:보스번호 = 20
; 군중제어 한계
총력전_군중제어_한계_최초:보스번호 = 4000 * 난이도계수 / 100
; 군중제어 강화
총력전_군중제어_강화_최초:보스번호 = 0
; 군중제어 저항
총력전_군중제어_저항_최초:보스번호 = 50


; #region == 페이즈 ==
@총력전_보스_페이즈_판단_0
#DIM DYNAMIC 보스번호
#DIM DYNAMIC iTmp
SELECTCASE 총력전_보스_페이즈
	CASE 0
		; 비나 위치 바뀔거 같으면, 아니면 그냥 10 으로
		; iTmp = 1
		; CALL 총력전_목표(iTmp, 0, 총력전_캐릭터수)
		; 보스번호 = RESULT
		보스번호 = 10
		; 보스 체력 비율
		iTmp = 총력전_체력:보스번호 * 100 / GETVAR_RAIDSTAT_SUM(보스번호, "최대체력")
		IF 총력전_턴수 >= 20 || iTmp < 30 ; 체력 30% 이하면
			총력전_보스_페이즈 = 1
			; TESTCODE
			; LOCALS = 페이즈 2
			; CALL 총력전_UI_텍스트_추가(LOCALS, 칼라_파파랑)
		ENDIF
ENDSELECT


; #endregion == 페이즈 ==

; #region == 스킬 ==
@총력전_보스_스킬_초기_0
총력전_보스_쿨다운:0 = 2
총력전_보스_쿨다운:1 = 2
총력전_보스_쿨다운:2 = 99
; 총력전_보스_쿨다운:3 = 99
; 난이도 3, 4 모래폭풍 시전
IF 총력전_보스_난이도 >= 3
	CALL 총력전_보스_0_스킬_3
ENDIF
; CALL 총력전_보스_보상_0

@총력전_보스_시퀀스_스킬_0
#DIM DYNAMIC 스킬수
#DIM DYNAMIC 시전가능스킬, 3
#DIM DYNAMIC 보스번호
#DIM DYNAMIC iTmp, 2

; 시전중인 스킬 있으면 마저 시전
IF 총력전_보스_시전스킬 >= 0
	GOTO CAST_SKILL
ENDIF

; 소환수 대비 모래폭풍 시전
IF 총력전_보스_난이도 >= 3
	CALL 총력전_보스_0_스킬_3
ENDIF

; 페이즈 변경후 "정화의 폭풍" 시전
IF 총력전_보스_페이즈 == 1 && 총력전_보스_쿨다운:2 > 20
	; 총력전_보스_쿨다운:2 = 5 ; 이후 쿨
	총력전_보스_시전스킬 = 2
	GOTO CAST_SKILL
	; CALL 총력전_보스_0_스킬_2
	; RETURN ; 아니면 GOTO SKIP
ENDIF

; 페이즈 비례 스킬 선택
SELECTCASE 총력전_보스_페이즈
	CASE 0
		스킬수 = 2
	CASEELSE ; 1
		스킬수 = 3
ENDSELECT

; 시전중인 없으면 선택
; 스킬 쿨 확인
VARSET 시전가능스킬, -1
iTmp:1 = 0
FOR iTmp, 0, 스킬수
	IF 총력전_보스_쿨다운:iTmp <= 0
		시전가능스킬:(iTmp:1) = iTmp
		iTmp:1 ++
	ENDIF
NEXT
; 시전 가능 스킬 없으면
IF 시전가능스킬:0 < 0
	RETURN
ENDIF
; 시전스킬 선택
iTmp = RAND:(iTmp:1)
총력전_보스_시전스킬 = 시전가능스킬:iTmp

$CAST_SKILL
; 비나 위치 바뀔거 같으면, 아니면 그냥 10 으로
; iTmp = 1
; CALL 총력전_목표(iTmp, 0, 총력전_캐릭터수)
; 보스번호 = RESULT
보스번호 = 10
; 상태효과 적용
; 비나는 혼자라서 for loop 불필요
CALL 총력전_상태효과_스탯처리(보스번호, 총력전_방식_스킬)
; 카운터
CALL 총력전_카운터_증가(보스번호, -1, 총력전_방식_스킬)
CALL 총력전_카운터_소비(보스번호, 총력전_방식_스킬)
; 시전
CALLFORM 총력전_보스_0_스킬_{총력전_보스_시전스킬}
; 스킬 상태효과 종료
CALL 총력전_초기화_스탯_상효(보스번호)
CALL 총력전_초기화_상태효과_적용(보스번호, 총력전_방식_스킬)
; 스킬 상태효과 소비
CALL 총력전_상태효과_소비(보스번호, 총력전_방식_스킬)

; 아칠루트의 빛
; 나주에. 위치 + 1 ~ 2 범위로 조준, 아스나 스킬 테스트를 위해서 조준으로 설정
@총력전_보스_0_스킬_0
#DIM DYNAMIC 범위목표, 총력전_캐릭터수
; #DIM DYNAMIC 주목표
#DIM DYNAMIC 보스번호
#DIM DYNAMIC 대미지
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp
; 조준 후 종료
IF 총력전_보스_시전중 == 0
	총력전_보스_시전중 = 1
	iTmp = 0
	CALL 총력전_목표(iTmp, 0, 총력전_캐릭터수)
	; 주목표 = RESULT
	총력전_보스_조준:0 = RESULT
	; 시전 경고
	sTmp = 『아칠루트의 빛』준비중
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; 경고 텍스트 추가
	; 경고 색깔 업데이트 하면 변경
	; sTmp = 비나가 %조사처리(총력전_이름:(총력전_보스_조준:0), "와")% 주변을 노리고 있다!
	sTmp = 비나가 %조사처리(총력전_이름:(총력전_보스_조준:0), "와")% 주변을(2범위) 노리고 있다!
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; GUI 업데이트 나중에 추가
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
	; 종료
	RETURN
ENDIF

; 스킬 시전
; 시전 텍스트
sTmp = 『아칠루트의 빛』
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
; 목표 아직도 있는지 확인, 없으면 스킬 쿨 다운
iTmp = 총력전_보스_조준:0
IF iTmp < 0 || 총력전_상태:iTmp <= 0 || 총력전_상태:iTmp == 총력전_상태_행동불능
	sTmp = 목표 없음, 시전 취소
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	GOTO CLEANUP
ENDIF
; 범위로 변경
CALL 총력전_목표_범위(범위목표, 총력전_보스_조준:0, 0, 2)
; 비나 위치 바뀔거 같으면, 아니면 그냥 10 으로
; iTmp = 1
; CALL 총력전_목표(iTmp, 0, 총력전_캐릭터수)
; 보스번호 = RESULT
보스번호 = 10
; 대미지, 전 버전 = 난이도 4 = 160%, 나머지 120%
SELECTCASE 총력전_보스_난이도
	CASE 4
		대미지 = GETVAR_RAIDSTAT_SUM(보스번호, "공격력") * 300
	CASEELSE
		대미지 = GETVAR_RAIDSTAT_SUM(보스번호, "공격력") * 200
ENDSELECT
대미지 = DIVIDE_ROUND(대미지, 100)
FOR iTmp, 0, 총력전_캐릭터수
	SIF 범위목표:iTmp < 0
		BREAK
	CALL 총력전_처리_피격(대미지, 범위목표:iTmp, 보스번호)
NEXT
; 스킬후 처리
$CLEANUP
; 최소 쿨 2? 시스템에서 스킬 시퀀스 전 쿨다운 계산함
CALL 총력전_보스_스킬종료(2)


; 공의의 불꽃
; 경고 1턴후 무작위 적에게 대미지 + 군중제어
; 나중에 카이텐져 추가하고 미사일 공격 + 스턴 스킬 이랑 너무 비슷하면 변경
@총력전_보스_0_스킬_1
#DIM DYNAMIC 목표
#DIM DYNAMIC 보스번호
#DIM DYNAMIC 공격회수
#DIM DYNAMIC 대미지
#DIM DYNAMIC 군중제어
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp
; 난이도 따라 공격 회수 결정
SELECTCASE 총력전_보스_난이도
	CASE 0
		공격회수 = 2
	CASE 1, 2
		공격회수 = 3
	CASE 3
		공격회수 = 4
	CASEELSE ; 4
		공격회수 = 5
ENDSELECT
; 경고 후 종료
IF 총력전_보스_시전중 == 0
	총력전_보스_시전중 = 1
	; 시전 경고
	sTmp = 『공의의 불꽃』준비중
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	sTmp = 1 턴후 무작위 공격 x{공격회수}
	CALL 총력전_UI_텍스트_추가(sTmp)
	; 시전 예약
	총력전_보스_조준:0 = 1
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
	; 종료
	RETURN
ENDIF
; 시전 텍스트
sTmp = 『공의의 불꽃』
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
; 일단 그냥 10 으로
보스번호 = 10
; 대미지, 전 버전 = 난이도 4 = 400%, 나머지 200%
SELECTCASE 총력전_보스_난이도
	CASE 4
		대미지 = GETVAR_RAIDSTAT_SUM(보스번호, "공격력") * 200
	CASEELSE
		대미지 = GETVAR_RAIDSTAT_SUM(보스번호, "공격력") * 100
ENDSELECT
대미지 = DIVIDE_ROUND(대미지, 100)
; 군중제어 처리
군중제어 = 400 * GETVAR_RAIDSTAT_SUM(보스번호, "군중제어강화")
군중제어 = DIVIDE_ROUND(군중제어, 100)
; 시전
FOR iTmp, 0, 공격회수
	; 무작위 목표
	CALL 총력전_목표_무작위(0)
	목표 = RESULT
	CALL 총력전_처리_피격(대미지, 목표, 보스번호)
	; 명중 했으면 군중제어 적용
	SIF RESULT == 1
		CALL 총력전_처리_군중제어(군중제어, 목표, 보스번호)
NEXT
; 스킬후 처리, 최소 쿨 2?
CALL 총력전_보스_스킬종료(2)


; 정화의 폭풍
@총력전_보스_0_스킬_2
#DIM DYNAMIC 목표, 총력전_캐릭터수
#DIM DYNAMIC 보스번호
#DIM DYNAMIC 대미지
#DIM DYNAMIC 방어력감소 ; 백분율
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp
; sTmp = 대충 무서운 스킬 경고하는 메세지
; CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
; 경고 후 종료
IF 총력전_보스_시전중 == 0
	총력전_보스_시전중 = 1
	; 시전 경고
	sTmp = 『정화의 폭풍』준비중
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
	; 종료
	RETURN
ENDIF
; 시전
; 일단 그냥 10 으로
보스번호 = 10
; 자가 명중률 증가
CALL 총력전_상태효과_추가(보스번호, 보스번호, 상효_종류_명중률, 200, 1, 총력전_방식_스킬, 총력전_방식_스킬, 1, -1, 0) ; 보스 스킬 번호는 음수로?
CALL 총력전_상태효과_스탯처리(보스번호, 총력전_방식_스킬)
; 대미지
대미지 = GETVAR_RAIDSTAT_SUM(보스번호, "공격력") * LIMIT(100 * 총력전_보스_난이도, 100, 300)
대미지 = DIVIDE_ROUND(대미지, 100)
; 방어력 감소
SELECTCASE 총력전_보스_난이도
	CASE 0
		방어력감소 = -5
	CASEELSE
		방어력감소 = -10 * 총력전_보스_난이도
ENDSELECT
; 목표 처리
CALL 총력전_목표_전체(목표, 0)
; 적용
FOR iTmp, 0, 총력전_캐릭터수
	SIF 목표:iTmp < 0
		BREAK
	; 회피 불가 공격
	CALL 총력전_처리_피격(대미지, 목표:iTmp, 보스번호, 0)
	; 확정 방어 감소
	CALL 총력전_상태효과_추가_텍스트(목표:iTmp, 보스번호, 상효_종류_방어력백분율, 방어력감소, 0, 총력전_방식_지속, 총력전_방식_턴, 3, -1, 1)
	; 텍스트 추가
	; sTmp = %조사처리(총력전_이름:(목표:iTmp), "의")% 방어력 ({방어력감소}％) 감소!
	; CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; ; UI 업데이트
	; CALL 총력전_UI_Main(0)
	; WAITANYKEY
NEXT
; 스킬후 처리, 최소 쿨 2
CALL 총력전_보스_스킬종료(2)
총력전_보스_쿨다운:2 = 5 ; 정화의 폭풍 쿨

; 짙은 모래폭풍
; 소환수 때문에 턴마다 추가 해야함(나중에 방식 변경)
@총력전_보스_0_스킬_3
#DIM DYNAMIC 목표, 총력전_캐릭터수
#DIM DYNAMIC 보스번호
#DIM DYNAMIC 목표있음
; #DIM DYNAMIC 효과번호
#DIM CONST 명중감소 = -20 ; 백분율
#DIM DYNAMIC iTmp, 2
#DIMS DYNAMIC sTmp

; 목표 처리
CALL 총력전_목표_전체(목표, 0)
; 목표에 디버프가 이미 있는지 확인
FOR iTmp, 0, 총력전_캐릭터수
	SIF 목표:iTmp < 0
		BREAK
	; 디버프 확인
	iTmp:1 = 총력전_상태효과_검색_스킬번호(목표:iTmp, -1, 2)
	IF iTmp:1 < 0
		; 디버프 없으면 추가
		IF 목표있음 == 0
			목표있음 == 1
			sTmp = 『짙은 모래폭풍』
			CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
			; 일단 그냥 10 으로
			보스번호 = 10
		ENDIF
		CALL 총력전_상태효과_추가(목표:iTmp, 보스번호, 상효_종류_명중률백분율, 명중감소, 3, 총력전_방식_지속, 총력전_방식_지속, 1, -1, 2)
		; 텍스트 추가
		sTmp = %조사처리(총력전_이름:(목표:iTmp), "의")% 명중률 ({명중감소}％) 감소!
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
		; UI 업데이트
		CALL 총력전_UI_Main(0)
		WAITANYKEY
	ENDIF
NEXT

; #endregion == 스킬 ==

; #region == 군중제어 ==
; 기본 군중제어 계산 필요 없으면 RETURN 1
; ======================
; @총력전_보스_처리_군중제어_0(제어량, 대상, 시전자 = -1)
; #DIM 제어량
; #DIM 대상
; #DIM DYNAMIC 시전자

; RETURN 1
; #endregion == 군중제어 ==

; #region == 보상 ==
; 155,총력전 코인,2000
; 156,상급 총력전 코인,8000
; 뛰어 쓰기 없에면 ITEM:총력전코인 등으로 쓸수 있을거 같긴 한데
; 
; + 나중에 공통 보상 함수 설정
; 아직 얻을 장비 + 필요한 코인/남는 코인 계산 해서 추가 수정 필요
; 
; 난이도 0
; 코인 5~6, 					장비 (T1 25%)x2, (T2 12%)
; 난이도 1
; 코인 7~8, 상급코인 0~1, 		장비 (T1 45%), (T2 20%), (T3 10%)
; 난이도 2
; 코인 10~12, 상급코인 1~5, 	장비 (T2 50%), (T3 25%), (T4 20%)
; 난이도 3
; 코인 15~19, 상급코인 4~9, 	장비 (T3 50%), (T4 32%)x2, (T5 12%)
; 난이도 4
; 코인 21~33, 상급코인 8~14, 	장비 (T4 50%), (T5 32%)x2, (T6 12%)
; ==================
@총력전_보스_보상_0
#DIM DYNAMIC 보상코인, 2 ; 코인, 상급코인
#DIM DYNAMIC iTmp, 3
#DIMS DYNAMIC sTmp

; 코인 보상
SELECTCASE 총력전_보스_난이도
	CASE 0 ; HARD: 5~6
		보상코인:0 = 5
		보상코인:0 += RAND:2
	CASE 1 ; HARDCORE: 7~8, 0~1
		보상코인:0 = 7
		보상코인:0 += RAND:2
		보상코인:1 += RAND:2
	CASE 2 ; EXTREME: 10~12, 1~5
		보상코인:0 = 10
		보상코인:0 += RAND:3
		보상코인:1 = 1
		보상코인:1 += RAND:5
	CASE 3 ; INSANE: 15~20, 4~9
		보상코인:0 = 15
		보상코인:0 += RAND:6
		보상코인:1 = 4
		보상코인:1 += RAND:6
	CASE 4 ; TORMENT: 21~33, 8~14
		보상코인:0 = 21
		보상코인:0 += RAND:13
		보상코인:1 = 8
		보상코인:1 += RAND:7
ENDSELECT
CALL 총력전_보상_코인(보상코인:0, 보상코인:1)
; 장비 보상
SELECTCASE 총력전_보스_난이도
	CASE 0 ; HARD: (T1 25%)x2, (T2 12%)
		FOR iTmp:1, 0, 2
			; T1
			iTmp = RAND:100
			IF iTmp < 25
				CALL 총력전_보상_장비(1)
			ENDIF
		NEXT
		; T2
		iTmp = RAND:100
		IF iTmp < 12
			CALL 총력전_보상_장비(2)
		ENDIF
	CASE 1 ; HARDCORE: (T1 50%), (T2 25%), (T3 15%)
		; T1
		iTmp = RAND:100
		IF iTmp < 45
			CALL 총력전_보상_장비(1)
		ENDIF
		; T2
		iTmp = RAND:100
		IF iTmp < 25
			CALL 총력전_보상_장비(2)
		ENDIF
		; T3
		iTmp = RAND:100
		IF iTmp < 15
			CALL 총력전_보상_장비(3)
		ENDIF
	CASE 2 ; EXTREME: (T2 50%), (T3 25%), (T4 20%)
		; T2
		iTmp = RAND:100
		IF iTmp < 50
			CALL 총력전_보상_장비(2)
		ENDIF
		; T3
		iTmp = RAND:100
		IF iTmp < 25
			CALL 총력전_보상_장비(3)
		ENDIF
		; T4
		iTmp = RAND:100
		IF iTmp < 20
			CALL 총력전_보상_장비(4)
		ENDIF
	CASE 3 ; INSANE: (T3 50%), (T4 32%)x2, (T5 12%)
		; T3
		iTmp = RAND:100
		IF iTmp < 50
			CALL 총력전_보상_장비(3)
		ENDIF
		FOR iTmp:1, 0, 2
			; T4
			iTmp = RAND:100
			IF iTmp < 32
				CALL 총력전_보상_장비(4)
			ENDIF
		NEXT
		; T5
		iTmp = RAND:100
		IF iTmp < 12
			CALL 총력전_보상_장비(5)
		ENDIF
	CASE 4 ; TORMENT: (T4 50%), (T5 32%)x2, (T6 12%)
		; T4
		iTmp = RAND:100
		IF iTmp < 50
			CALL 총력전_보상_장비(4)
		ENDIF
		FOR iTmp:1, 0, 2
			; T5
			iTmp = RAND:100
			IF iTmp < 32
				CALL 총력전_보상_장비(5)
			ENDIF
		NEXT
		; T6
		iTmp = RAND:100
		IF iTmp < 12
			CALL 총력전_보상_장비(6)
		ENDIF
ENDSELECT

; #endregion == 보상 ==
