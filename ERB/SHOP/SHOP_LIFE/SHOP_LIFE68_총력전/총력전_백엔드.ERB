; ====================
; 
; ====================


; #region == 이동 ==
; 캐릭터 이동, 위치 검증(?)
; 옵션: 0 = SWAP
; 1 = 캐릭터를 목표로 이동, 나머지를 뒤로 이동?
; "뒤" 를 어떻게 정할지... 정하고, 필요하면 활성화
; ==================
; 총력전 번호를 이용해 이동
@총력전_이동_번호(캐릭터, 목표)
#DIM 캐릭터 ; 총력전 ID
#DIM 목표 ; 총력전 ID
; #DIM 옵션

; 엄폐물_위치_부착 있는지 확인
; - 한쪽만 엄폐물_위치_부착 이면 부착 제거?
; - 양쪽다 부착이면 이동
; 엄폐물 엄폐물_위치_부착 한쪽만 있으면 이동

SWAP 총력전_위치:캐릭터, 총력전_위치:목표


; 위치 2개를 이동
@총력전_이동_위치(Loc:0, Loc:1)
#DIM Loc, 2

#DIM DYNAMIC iTmp, 2

; 엄폐물_위치_부착 있는지 확인
; - 한쪽만 엄폐물_위치_부착 이면 부착 제거?
; - 양쪽다 부착이면 이동
; 엄폐물 엄폐물_위치_부착 한쪽만 있으면 이동

iTmp:0 = FINDELEMENT(총력전_위치, Loc:0)
iTmp:1 = FINDELEMENT(총력전_위치, Loc:1)

SWAP 총력전_위치:(iTmp:0), 총력전_위치:(iTmp:1)


; 동일 장소에 캐릭터가 있는지 확인 + 수정
; 총력전ID 시작 부터 끝 번호 까지
; @총력전_이동_검증(시작 = 0, 끝 = 4)
; #DIM DYNAMIC 시작
; #DIM DYNAMIC 끝
; 장소 확인

; 문제없으면 RETURN

; 빈자리 확인

; #endregion == 이동 ==

; #region == 보스 공통 ==
; 보스 스킬 시전후 정리
; 보스 스킬 쿨다운, 시전스킬, 시전중, 조준 처리
@총력전_보스_스킬종료(최소쿨 = 2)
#DIM DYNAMIC 최소쿨

#DIM DYNAMIC iTmp
; 쿨다운 처리
VARSIZE 총력전_보스_쿨다운
FOR iTmp, 0, RESULT
	총력전_보스_쿨다운:iTmp = MAX(총력전_보스_쿨다운:iTmp, 최소쿨)
NEXT
총력전_보스_시전스킬 = -1
총력전_보스_시전중 = 0
VARSET 총력전_보스_조준, -1

; ----- 보상 -----
@총력전_보상_코인(기본, 상급)
#DIM 기본
#DIM 상급

#DIMS DYNAMIC sTmp

IF 기본 > 0
	; 155,총력전 코인,2000
	ITEM:155 += 기본
	sTmp = 총력전 코인 {기본}개 획득
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_주석)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
ENDIF
IF 상급 > 0
	; 156,상급 총력전 코인,8000
	ITEM:156 += 상급
	sTmp = 상급 총력전 코인 {상급}개 획득
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_주석)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
ENDIF

; -1 이면 여기서 무작위로
@총력전_보상_장비(티어, 타입 = -1)
#DIM 티어
#DIM 타입

#DIM DYNAMIC 획득장비
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp

SIF 타입 == -1
	타입 = RAND:9

획득장비 = 9 * (티어 - 1) + 타입
장비:획득장비 ++
sTmp = %장비티어(획득장비)% %장비타입(획득장비)%「%장비이름(획득장비)%」획득
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_주석)
; UI 업데이트
CALL 총력전_UI_Main(0)
WAITANYKEY

; #endregion == 보스 공통 ==

; #region == 스킬 ==
; 스킬 처리 방식이 달라서 카운터, 상태효과 처리는 총력전_시퀀스_스킬시전 에서
; ==================
; 캐릭터 스킬 코스트 계산
; (나중에)필요하면 가장 큰 감소 값만 적용
@총력전_스킬코스트(캐릭터)
#DIM 캐릭터

; #DIM iID
#DIM 기본코스트
#DIM iTmp, 4

iTmp = 총력전_캐릭터상태(캐릭터)
IF iTmp != 총력전_상태_보통 && iTmp != 총력전_상태_행동불능
	총력전_스킬_코스트:캐릭터 = 0
	RETURN 0
ENDIF

; iID = 총력전_ID:캐릭터
; 기본 스킬 코스트
TRYCCALLFORM 총력전_스킬_{총력전_스킬_번호:캐릭터}_코스트(캐릭터)
	기본코스트 = RESULT
CATCH
	; 스킬 없으면
	총력전_스킬_코스트:캐릭터 = 0
	RETURN 0
ENDCATCH
; 기본 코스트가 0 이면 PASS
IF 기본코스트 <= 0
	총력전_스킬_코스트:캐릭터 = 기본코스트
	RETURN
ENDIF
; 코스트 감소 백분율
iTmp:1 = 총력전_상태효과_합계(캐릭터, 상효_종류_코스트감소백분율, 총력전_방식_지속)
iTmp:1 = 기본코스트 * iTmp:1 / 100 ; round down
; iTmp:1 = DIVIDE_ROUND(iTmp:1, 100)
; 코스트 감소
iTmp:2 = 총력전_상태효과_합계(캐릭터, 상효_종류_코스트감소, 총력전_방식_지속)
; 제한, 최소 1
iTmp = 기본코스트 - iTmp:1 - iTmp:2
총력전_스킬_코스트:캐릭터 = MAX(iTmp, 1)


@총력전_처리_스킬(시전자)
#DIM 시전자

; 스킬 없으면 스킵
SIF 총력전_스킬_번호:시전자 < 0
	RETURN

; 스킬 상태효과 적용
CALL 총력전_상태효과_스탯처리(시전자, 총력전_방식_스킬)

; 스킬 취소중 쿨다운 리셋 위해서 쿨 먼저 계산
TRYCCALLFORM 총력전_스킬_{총력전_스킬_번호:시전자}_쿨다운(총력전_스킬_가변:시전자)
	총력전_스킬_쿨다운:시전자 = RESULT
CATCH
	총력전_스킬_쿨다운:시전자 = 2
ENDCATCH
TRYCALLFORM 총력전_스킬_{총력전_스킬_번호:시전자}_발동(시전자)

; 스킬 카운터 처리
CALL 총력전_카운터_증가(시전자, -1, 총력전_방식_스킬)
CALL 총력전_카운터_소비(시전자, 총력전_방식_스킬)
; 스킬 상태효과 종료
CALL 총력전_초기화_스탯_상효(시전자)
CALL 총력전_초기화_상태효과_적용(시전자, 총력전_방식_스킬)
; 스킬 상태효과 소비
CALL 총력전_상태효과_소비(시전자, 총력전_방식_스킬)


; 소환물 스킬 처리
@총력전_처리_스킬_소환물(시전자)
#DIM 시전자

#DIMS sTmp

; EXISTFUNCTION 기능 없음
; sTmp = 총력전_소환_스킬_{총력전_스킬_번호:시전자}_발동
; IF EXISTFUNCTION(sTmp) == 0
; 	RETURN
; ENDIF

RESULT = 0
TRYCALLFORM 총력전_소환_스킬_{총력전_스킬_번호:시전자}_EXIST
IF RESULT == 0
	RETURN
ENDIF

; 스킬 상태효과 적용
CALL 총력전_상태효과_스탯처리(시전자, 총력전_방식_스킬)

TRYCCALLFORM 총력전_소환_스킬_{총력전_스킬_번호:시전자}_발동(시전자)
	TRYCCALLFORM 총력전_소환_스킬_{총력전_스킬_번호:시전자}_쿨다운
		총력전_스킬_쿨다운:시전자 = RESULT
	CATCH
		총력전_스킬_쿨다운:시전자 = 2
	ENDCATCH
CATCH
ENDCATCH

; 스킬 상태효과 종료
CALL 총력전_초기화_스탯_상효(시전자)
CALL 총력전_초기화_상태효과_적용(시전자, 총력전_방식_스킬)
; 스킬 상태효과 소비
CALL 총력전_상태효과_소비(시전자, 총력전_방식_스킬)


; #endregion == 스킬 ==

; #region == 스킬 공통 기능 ==
; 스킬 이름 + NO:시전자 == iID 면 추가 텍스트 추가
; ARRAY 텍스트 중 공통 확률로 결정
@총력전_스킬_공통_발동텍스트(시전자, iID, 스킬이름, 텍스트)
#DIM 시전자
#DIM iID
#DIMS 스킬이름
#DIMS REF 텍스트

#DIM DYNAMIC iTmp, 2
#DIMS DYNAMIC sTmp

sTmp = %총력전_이름:시전자% 스킬 시전:『%스킬이름%』
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
iTmp = 총력전_ID:시전자
IF iTmp >= 0 && NO:iTmp == iID
	; 시전자 csv ID 가 iID 랑 일치하면 
	VARSIZE 텍스트
	iTmp:1 = RESULT
	iTmp:1 = RAND:(iTmp:1)
	sTmp = %텍스트:(iTmp:1)%
	CALL 총력전_UI_텍스트_추가(sTmp)
ENDIF

; 범위 스킬, 주목표 필요 없으면 쓰는용
; return -1? 목표 없으면 스킬 취소 때문에... 쓰기 애매
; @총력전_스킬_공통_범위(범위목표, 목표팀, 범위, 선택타입, 시전자)
; #DIM REF 범위목표
; #DIM 목표팀
; #DIM 범위
; #DIM 선택타입
; #DIM 시전자
; #DIM DYNAMIC 주목표
; ; 목표 처리
; CALL 총력전_시퀀스_목표선택(주목표, 선택타입)
; ; 목표 없으면 스킬 해재
; IF 주목표 < 0
; 	CALL 총력전_스킬_공통_스킬취소(시전자)
; 	RETURN
; ENDIF
; ; 범위로 변경, 적팀 1 이상이 되면 수정 필요
; CALL 총력전_목표_범위(범위목표, 주목표, 목표팀, 범위)


; 조준 스킬등 중간에 오류때문에 취소 해야되면
@총력전_스킬_공통_스킬취소(시전자)
#DIM 시전자
#DIMS DYNAMIC sTmp
sTmp = 스킬 취소
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_경고)
; 스킬쿨 리셋
총력전_스킬_쿨다운:시전자 = 0
; 코스트 되돌리기...지만 계산 미스가 있을수도
[IF_DEBUG]
sTmp = MIN {총력전_코스트} + {총력전_스킬_코스트:시전자}, {총력전_코스트_최대}
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
[ENDIF]
총력전_코스트 = MIN(총력전_코스트 + 총력전_스킬_코스트:시전자, 총력전_코스트_최대)
; UI 업데이트
CALL 총력전_UI_Main(0)
WAITANYKEY

; #endregion == 스킬 공통 기능 ==


; #region == 기본공격 처리 ==
; 여기서 공격회수, 상태효과/카운터 처리
; 나중에 무기로 방식 바꾸고 싶을때에 대비해서 함수는 따로
; ===========================
@총력전_처리_기본공격(공, 수)
#DIM 공
#DIM 수
; #DIM DYNAMIC 조준방식

#DIM DYNAMIC 공격회수
#DIM DYNAMIC 대미지
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp

; 공격 상태효과 적용
CALL 총력전_상태효과_스탯처리(공, 총력전_방식_공격)
; 공격력
대미지 = GETVAR_RAIDSTAT_SUM(공, "공격력")
; 공격회수 계산
; 공격회수 = 100 ; 기본 공격 회수
총력전_공격잔여:공 += 100 ; 기본 공격 회수
; 상태효과 버프/디버프
총력전_공격잔여:공 += 총력전_상태효과_합계(공, 상효_종류_공격속도, 총력전_방식_지속)
총력전_공격잔여:공 += 총력전_상태효과_합계(공, 상효_종류_공격속도, 총력전_방식_공격)
[IF_DEBUG]
sTmp = 공격 잔여 = {총력전_공격잔여:공}
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
sTmp = 공격 회수 = {총력전_공격잔여:공/100}, 남은 잔여 = {총력전_공격잔여:공%100}
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
[ENDIF]
공격회수 = 총력전_공격잔여:공 / 100
; 잔여 저장
총력전_공격잔여:공 = 총력전_공격잔여:공 % 100

; 나중엔 공격 회수 ERH 에 따로, 다른 방식으로 증가, 공격시 소비 하는 방식으로
; 공격회수 += 총력전_상태효과_합계(공, 상효_종류_공격속도, 총력전_방식_지속)
; 공격회수 += 총력전_상태효과_합계(공, 상효_종류_공격속도, 총력전_방식_공격)
; 공격회수 = DIVIDE_ROUND(공격회수, 100)

; 피격
IF 공격회수 > 0
	FOR iTmp, 0, 공격회수
		IF iTmp == 1 ; && 총력전_팀:공 == 0
			CALL 총력전_UI_텍스트_추가("추가공격!", 칼라_노랑)
		ENDIF
		; 기본 공격 카운터 처리
		CALL 총력전_처리_피격(대미지, 수, 공)
		CALL 총력전_카운터_증가(공, 수, 총력전_방식_공격)
		CALL 총력전_카운터_소비(공, 총력전_방식_공격)
	NEXT
ELSE
	; 캐릭터가 재장전중...
	sTmp = %조사처리(총력전_이름:공, "가")% 재장전중...
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_핑크)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
ENDIF

; 공격 상태효과 종료
CALL 총력전_초기화_스탯_상효(공)
CALL 총력전_초기화_상태효과_적용(공, 총력전_방식_공격)
; 공격 상태효과 소비
CALL 총력전_상태효과_소비(공, 총력전_방식_공격)


; #endregion == 기본공격 처리 ==

; #region == 피격 ==
; 
; 공/방ID (0~20) 총력전ID
; 
; 지금은 엄폐물이 공격 다 막으면 치명/명중 카운터 넘어감
; 
; 크리, 방어력... 계산식
; (a(Max-Min) / (x^2 + bx + a)) * -1 + Max
; Max = 최대치(exclusive)
; Min = 최소치
; =========================
; 나중에 "엄폐물 무시" 옵션 추가
; 나중에 방어 무시 옵션 추가
@총력전_처리_피격(대미지, 수, 공 = -1, 회피 = 1, 치명타 = 1, 상효처리 = 1)
#DIM 대미지
#DIM 수
#DIM DYNAMIC 공 ; 공격 캐 총력전 ID 필요 없으면 = -1
#DIM DYNAMIC 회피 ; BOOL: 회피 가능한지
#DIM DYNAMIC 치명타 ; BOOL: 치명타 가능한지, 2 = 확정 치명
#DIM DYNAMIC 상효처리 ; BOOL: 상태효과_적용_기타 쓸지
#DIM DYNAMIC 명중기록 ; 공격이 명중했는지
#DIM DYNAMIC 치명기록 ; 치명타 성공 했는지

#DIM DYNAMIC iTmp, 3
#DIMS DYNAMIC sTmp

; 피격 상태효과 적용
CALL 총력전_상태효과_스탯처리(수, 총력전_방식_피격)
; 카운터 추가 + 스킬 TRYCALL 총력전_스킬_{번호}_{추가번호}_카운터
; 카운터 가 있으면 


; 회피율 처리
; 임시: RAND:(명중+회피) {IF RESULT < 명중 {hit}}
; ^ 생각 보다 괜찮아서 유지
; 나중엔 (명중률 - 회피율) = x
; MAX=75, MIN=0, a=195000, b=160
; 50 = 4%, 200 = 20%, 500 = 47%
IF 회피 > 0 && 공 >= 0
	; 회피 엄폐? 연막 추가 회피율?
	; 명중 처리, 0 / 2 로
	iTmp:1 = GETVAR_RAIDSTAT_SUM(공, "명중률")
	iTmp:2 = GETVAR_RAIDSTAT_SUM(수, "회피율")
	iTmp = RAND:(iTmp:2 + iTmp:1)
	[IF_DEBUG]
	sTmp = ({공}) -> ({수}) 명:{iTmp:1}, 회:{iTmp:2} = {iTmp}
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
	[ENDIF]
	IF iTmp < iTmp:1
		; 명중 / 피격 카운터?
		명중기록 = 1
	ELSE
		; ({공}) -> ({수}) 
		sTmp = %조사처리(총력전_이름:수, "가")% %조사처리(총력전_이름:공, "의")% 공격을 회피했다!
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
		; UI 업데이트
		CALL 총력전_UI_Main(0)
		WAITANYKEY
		GOTO SKIPDMG
	ENDIF
ENDIF

; 방어력 처리: 공격력 % 감소
; 임시?: 대미지 - 방어력
;  MIN=0, MAX=85, a=100,000, b=135
; 50 = 7%, 200 = 34%, 500 = 65%
; x = 방어력 - 공격력/2
IF 공 >= 0
	; 방어력 - 공격력/2
	iTmp = GETVAR_RAIDSTAT_SUM(수, "방어력") - GETVAR_RAIDSTAT_SUM(공, "공격력")/2
	iTmp = MAX(iTmp, 0)
	; 최소 대미지 1
	[IF_DEBUG]
	; sTmp = ({공}) -> ({수}) 대미지:{대미지} - 방어:{총력전_방어력:수 + 총력전_방어력_상효:수}
	sTmp = ({공}) -> ({수}) 대미지:{대미지},
	sTmp += @" 방어력:{GETVAR_RAIDSTAT_SUM(수, "방어력")} - 공격력:{GETVAR_RAIDSTAT_SUM(공, "공격력")}/2 = {iTmp}"
	[ENDIF]
	iTmp = 총력전_계산식_0(iTmp, 0, 85, 100000, 135)
	[IF_DEBUG]
	sTmp += @" = 감소량:{iTmp}％"
	[ENDIF]
	; 방어 무시 계산
	; 방어력/대미지 계산
	iTmp:1 = DIVIDE_ROUND(대미지 * iTmp, 100)
	대미지 = MAX(대미지 - iTmp:1, 1)
	; 대미지 = MAX(대미지 - (총력전_방어력:수 + 총력전_방어력_상효:수), 1)
	[IF_DEBUG]
	sTmp += @" = {대미지}"
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
	[ENDIF]
ENDIF

; 치명타 확률 처리: x = (치명타 - 치명타_저항)
; MAX=100, MIN=5, a=64500, b=110
; 50 = 15%, 200 = 52%, 500 = 83%
IF 공 >= 0 && 치명타 == 1 
	; 치명타 확률 처리 0 / 2 로
	; 임시
	iTmp:1 = GETVAR_RAIDSTAT_SUM(공, "치명타")
	; 이 시스탬 계속 쓸거면, 치명타 너무 떠서 x2
	iTmp:2 = GETVAR_RAIDSTAT_SUM(수, "치명타저항") * 2
	iTmp = RAND:(iTmp:2 + iTmp:1)
	[IF_DEBUG]
	sTmp = ({공}) -> ({수}) 치명:{총력전_치명타:공 + 총력전_치명타_상효:공} , 치명저항:{총력전_치명타_저항:수 + 총력전_치명타_저항_상효:수}
	sTmp += @"= {iTmp}"
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
	[ENDIF]
	IF iTmp < iTmp:1
		치명타 = 2
	ELSE
		치명타 = 0
	ENDIF
ELSEIF 치명타 == 2
	; pass 
ELSE
	; 캐릭터 없으면 치명타 없는걸로?
	치명타 = 0
ENDIF

IF 치명타 == 2
	; 치명타 카운터 처리
	치명기록 = 1
	; 치명타 엄폐 처리?
	; 치명타 대미지 + 저항 처리
	; MAX=300, MIN=0, a=57,000, b=180
	; 100=100 200=171 300=215
	; OR
	; MAX=300, MIN=0, a=225,000, b=350
	; 100=50 200=99 300=139
	[IF_DEBUG]
	sTmp = ({공}) -> ({수})
	[ENDIF]
	IF 공 >= 0
		iTmp = GETVAR_RAIDSTAT_SUM(공, "치명타대미지") - GETVAR_RAIDSTAT_SUM(수, "치명타대미지저항")
		[IF_DEBUG]
		sTmp += @"치피:{GETVAR_RAIDSTAT_SUM(공, "치명타대미지")} - 치피저항{GETVAR_RAIDSTAT_SUM(수, "치명타대미지저항")}"
		[ENDIF]
	ELSE
		; 캐릭터 없으면 기본 치명타 대미지
		iTmp = 150 - GETVAR_RAIDSTAT_SUM(수, "치명타대미지저항")
		[IF_DEBUG]
		sTmp += @"치피:150 - 치피저항{GETVAR_RAIDSTAT_SUM(수, "치명타대미지저항")}"
		[ENDIF]
	ENDIF
	; 치명타 대미지 최소 100
	iTmp = MAX(iTmp, 100)
	[IF_DEBUG]
	sTmp += @"= {iTmp}"
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
	[ENDIF]
	iTmp:1 = iTmp * 대미지
	대미지 = DIVIDE_ROUND(iTmp:1, 100)
ENDIF

; 상태효과 피해감소+백분율

; 엄폐물
; 엄폐 성공률?
; 위치에 엄폐물 확인
iTmp = FINDELEMENT(총력전_엄폐물_위치, 총력전_위치:수)
; 대미지 감소 관련
IF 총력전_엄폐물_소비방식:iTmp:0 == 총력전_방식_피격양 || 총력전_엄폐물_소비방식:iTmp:1 == 총력전_방식_피격양
	CALL 총력전_엄폐물_소비(총력전_위치:수, 총력전_방식_피격양, 대미지, 총력전_팀:공)
	sTmp = 엄폐물이 {대미지 - RESULT} 방어
	대미지 = RESULT
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
ENDIF
IF 총력전_엄폐물_소비방식:iTmp:0 == 총력전_방식_피격 || 총력전_엄폐물_소비방식:iTmp:1 == 총력전_방식_피격
	CALL 총력전_엄폐물_소비(총력전_위치:수, 총력전_방식_피격, 1, 총력전_팀:공)
ENDIF
IF 대미지 == 0
	; 엄폐물이 모든 대미지를 막았으면 대미지 스킵
	GOTO SKIPDMG
ENDIF

[IF_DEBUG]
sTmp = 최종 대미지:{대미지}
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
[ENDIF]

; 체력 소비 텍스트
IF 공 < 0
	sTmp = %조사처리(총력전_이름:수, "가")% {대미지} 대미지를 받았다!
ELSE
	sTmp = %조사처리(총력전_이름:공, "가")% %조사처리(총력전_이름:수, "에게")% {대미지} 대미지를 줬다!
ENDIF
IF 총력전_팀:수 == 0 || 공 < 0
	; sTmp = ({공}) -> ({수}) %조사처리(총력전_이름:수, "가")% {대미지} 대미지를 받았다!
	IF 치명타 == 2
		CALL 총력전_UI_텍스트_추가(sTmp, 0xFF0000) ; 칼라_빨강
	ELSE
		CALL 총력전_UI_텍스트_추가(sTmp, 0xAA6060)
	ENDIF
ELSE
	; sTmp = ({공}) -> ({수}) %조사처리(총력전_이름:공, "가")% {대미지} 대미지를 줬다!
	IF 치명타 == 2
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑) ; 칼라_노랑
	ELSE	
		CALL 총력전_UI_텍스트_추가(sTmp) ; 0xAAAA60?
	ENDIF
ENDIF
; 보호막 소비
CALL 총력전_보호막_소비(대미지, 수)
대미지 = RESULT
; 체력 소비
총력전_체력:수 -= 대미지
; 총력전_체력:수 = MAX(총력전_체력:수, iTmp)

; 행동불능 / 무적 확인
CALL 총력전_확인_행동불능(수)

; UI 업데이트
CALL 총력전_UI_Main(0)
WAITANYKEY

; 대미지 카운터(피격) 처리
CALL 총력전_카운터_증가(수, 공, 총력전_방식_피격)
CALL 총력전_카운터_증가(수, 공, 총력전_방식_피격양, 대미지)
CALL 총력전_카운터_소비(수, 총력전_방식_피격)
CALL 총력전_카운터_소비(수, 총력전_방식_피격양, 대미지)
IF 공 >= 0
	; 명중 카운터 처리
	CALL 총력전_카운터_증가(공, 수, 총력전_방식_명중)
	CALL 총력전_카운터_소비(공, 총력전_방식_명중)
	; 치명 카운터 처리
	IF 치명기록 == 1
		CALL 총력전_카운터_증가(공, 수, 총력전_방식_치명타)
		CALL 총력전_카운터_소비(공, 총력전_방식_치명타)
	ENDIF
ENDIF

SIF 상효처리
	CALL 총력전_상태효과_적용_기타(수, 총력전_방식_피격)

; 피격 상태효과 소비
CALL 총력전_상태효과_소비(수, 총력전_방식_피격)

$SKIPDMG


IF 명중기록 == 0
	; 회피 카운터
	CALL 총력전_카운터_증가(수, 공, 총력전_방식_회피)
	CALL 총력전_카운터_소비(수, 총력전_방식_회피)
ENDIF

; $SKIP
; 피격 상태효과 종료
CALL 총력전_초기화_스탯_상효(수)
CALL 총력전_초기화_상태효과_적용(수, 총력전_방식_피격)
RETURN 명중기록

; #endregion == 피격 ==

; #region == 치유 ==
; 지금은 스킬에서 치유량 계산
; 치유(받을때) 상태효과가 치유력 증가 하면 효과 못봄
; "치유강화"가 이럴때 쓰는용
; 필요하면 변경
; ==================
@총력전_처리_치유(치유량, 대상, 시전자 = -1, 상효처리 = 1)
#DIM 치유량
#DIM 대상
#DIM DYNAMIC 시전자
#DIM DYNAMIC 상효처리 ; BOOL: 상태효과_적용_기타 쓸지

#DIM iTmp
#DIMS sTmp

; 치유 상태효과 적용
CALL 총력전_상태효과_스탯처리(대상, 총력전_방식_치유)

; 치유강화 적용
iTmp = 100
iTmp += 총력전_상태효과_합계(대상, 상효_종류_치유강화, 총력전_방식_치유)
iTmp += 총력전_상태효과_합계(대상, 상효_종류_치유강화, 총력전_방식_지속)
iTmp = MAX(iTmp, 0)
치유량 = 치유량 * iTmp
치유량 = DIVIDE_ROUND(치유량, 100)
; 치유 + 제한
총력전_체력:대상 += 치유량
iTmp = GETVAR_RAIDSTAT_SUM(대상, "최대체력")
총력전_체력:대상 = MIN(총력전_체력:대상, iTmp)

sTmp = %조사처리(총력전_이름:대상, "은")% {치유량} 회복됐다!
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
; UI 업데이트
CALL 총력전_UI_Main(0)
WAITANYKEY

; 카운터 증가
SIF 상효처리
	CALL 총력전_상태효과_적용_기타(대상, 총력전_방식_치유)

; 치유 상태효과 종료
CALL 총력전_초기화_스탯_상효(대상)
CALL 총력전_초기화_상태효과_적용(대상, 총력전_방식_치유)
; 치유 상태효과 소비
CALL 총력전_상태효과_소비(대상, 총력전_방식_치유)

; #endregion == 치유 ==

; #region == 군중제어 ==
; ======================
; 제어량에 강화 이미 적용 되 있어야함
@총력전_처리_군중제어(제어량, 대상, 시전자 = -1)
#DIM 제어량
#DIM 대상
#DIM DYNAMIC 시전자
#DIMS DYNAMIC sTmp

; 보스 군중제어 처리법이 따로 있으면
IF 총력전_상태:대상 == 총력전_상태_보스
	RESULT = 0
	TRYCALLFORM 총력전_보스_처리_군중제어_{총력전_보스}
	IF RESULT == 1
		RETURN
	ENDIF
ENDIF

; 명중확률?

; 저항 적용
제어량 = MAX(제어량 - GETVAR_RAIDSTAT_SUM(대상, "군중제어저항"), 0)

; 감소
; 나중에 계산식 변경
총력전_군중제어:대상 += 제어량

; 택스트 추가
sTmp = %총력전_이름:대상%(CC):({총력전_군중제어:대상}/{GETVAR_RAIDSTAT_SUM(대상, "군중제어한계")})
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
; UI 업데이트
CALL 총력전_UI_Main(0)
WAITANYKEY


; 군중제어 적용 되 있는지 RETURN BOOL
@총력전_처리_군중제어_적용(대상)
#DIM 대상
IF 총력전_군중제어:대상 >= GETVAR_RAIDSTAT_SUM(대상, "군중제어한계")
	RETURN 1
ENDIF
RETURN 0


; 턴 종료 시 군중제어 감소
; 군중제어_한계 만큼 제거?
; 리셋 == 1 { 군중제어 <= 군중제어_한계 {군중제어 = 0}}
@총력전_처리_군중제어_감소(대상, 리셋 = 0)
#DIM 대상
#DIM DYNAMIC 리셋
#DIMS DYNAMIC sTmp
IF 총력전_군중제어:대상 >= GETVAR_RAIDSTAT_SUM(대상, "군중제어한계")
	IF 리셋 == 1
		총력전_군중제어:대상 = 0
	ELSE
		총력전_군중제어:대상 -= GETVAR_RAIDSTAT_SUM(대상, "군중제어한계")
	ENDIF
	sTmp = %총력전_이름:대상%(CC):({총력전_군중제어:대상}/{GETVAR_RAIDSTAT_SUM(대상, "군중제어한계")})
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
ENDIF


; @총력전_처리_군중제어_회복(제어량, 대상, 시전자 = -1)
; #DIM 제어량
; #DIM 대상
; #DIM DYNAMIC 시전자

; #endregion == 군중제어 ==


; #region == 보호막 ==
; 보호막 합 + 소비 처리 
; ====================
@총력전_보호막_소비(대미지, 수)
#DIM 대미지
#DIM 수
; #DIM DYNAMIC 공 ; 보호막_관통 사용시 필요?

#DIM DYNAMIC iTmp, 3

; 보호막 없으면 스킵
IF 총력전_상태효과_합계(수, 상효_종류_보호막, 총력전_방식_지속) <= 0
	RETURN 대미지
ENDIF

FOR iTmp, 0, 총력전_상태효과수
	IF 총력전_상효_종류:수:iTmp == 상효_종류_보호막
		iTmp:1 = 대미지 - 총력전_상효_양:수:iTmp
		총력전_상효_양:수:iTmp = MAX(iTmp:1 * -1, 0) ; 보호막 양
		대미지 = MAX(iTmp:1, 0) ; 대미지 양
		; 남은 양이 0 이면 상효 제거, 카운터 뒤로
		IF 총력전_상효_양:수:iTmp == 0
			CALL 총력전_상태효과_제거(수, iTmp)
			iTmp --
		ENDIF

		; 남은 대미지가 0 이면 RETURN 0
		IF 대미지 == 0
			RETURN 0
		ENDIF
	ENDIF
NEXT

RETURN 대미지

; #endregion == 보호막 ==


; #region == 행동불능 확인 ==
; 플레이어 캐릭터/보스는 맞는 행동 불능
; 소환수는 자리 리셋
; ===========================
@총력전_확인_행동불능(캐릭터)
#DIM 캐릭터

#DIM DYNAMIC 무적양

; 무적 처리도 여기서?
; 문제: 무적양이 1 이상이면 무적기로 힐 가능
IF 총력전_상태효과_수(캐릭터, 상효_종류_불사) > 0
	; 나중에 상효 양 만큼?
	무적양 = 1
ELSE
	무적양 = 0
ENDIF

IF 총력전_체력:캐릭터 < 무적양 && 무적양 > 0
	총력전_체력:캐릭터 = MAX(총력전_체력:캐릭터, 무적양)
ELSEIF 총력전_체력:캐릭터 <= 0
	총력전_체력:캐릭터 = 0
	; 행동불능 처리
	IF 총력전_상태:캐릭터 == 총력전_상태_보통
		총력전_상태:캐릭터 = 총력전_상태_행동불능
	ELSEIF 총력전_상태:캐릭터 == 총력전_상태_보스
		총력전_상태:캐릭터 = 총력전_상태_보스_행동불능
	ELSEIF 총력전_상태:캐릭터 == 총력전_상태_소환 || 총력전_상태:캐릭터 == 총력전_상태_소한_비공격
		; 소환물 삭제 + ID 초기화
		TRYCALLFORM 총력전_소환_{총력전_스킬_번호:캐릭터}_해제(캐릭터)
		CALL 총력전_해제_캐릭터(캐릭터)
	ENDIF
ENDIF
; #endregion == 행동불능 확인 ==

; #region == 목표선택 ==
; 대상: 캐릭터 스킬, 기본공격 처리
; 조준: 보스 스킬 처리
; return binary, 배열 return 할 방법 찾으면 그걸로
; ----- OR -----
; REF 대상옵션
; ======================
; 시작번호 부터 처음 있는 적팀, 최대 범위 만큼
; 적팀 varsize 만큼 비교(?) 하기때문에 주의
; 너무 불편하면 나중에 적팀수 dim 포함
@총력전_목표(적팀, 시작위치, 범위 = 5)
#DIM REF 적팀, 0
#DIM 시작위치
#DIM 범위

#DIM iTmp, 3

FOR iTmp, 시작위치, 시작위치 + 범위
	iTmp:1 = FINDELEMENT(총력전_위치, iTmp)
	iTmp:2 = 총력전_캐릭터상태(iTmp:1)
	IF iTmp:2 == 0 || iTmp:2 == 총력전_상태_행동불능 || iTmp:2 == 총력전_상태_보스_행동불능
		CONTINUE
	ENDIF
	IF MATCH(적팀, 총력전_팀:(iTmp:1))
		RETURN iTmp:1
	ENDIF
NEXT

RETURN -1

; 팀에 대상중 무작위 선택, 총력전_FUNC 으로 이동?
; 나중에 팀 REF 로 변경, 예로니무스/허수아비 타겟(팀2?) 가능하게?
; #FUNCTION 으로 전환 가능
@총력전_목표_무작위(팀)
#DIM 팀 ; 목표 팀 REF?

#DIM DYNAMIC 대상전체, 총력전_캐릭터수
#DIM DYNAMIC 대상수 = 총력전_캐릭터수
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp

; 전체 목표
CALL 총력전_목표_전체(대상전체, 팀)
; 대상수 확인
FOR iTmp, 0, 총력전_캐릭터수
	IF 대상전체:iTmp < 0
		대상수 = iTmp
		BREAK
	ENDIF
	; 도발 확인
	IF 총력전_상태효과_수(대상전체:iTmp, 상효_종류_도발) > 0
		sTmp = %조사처리(총력전_이름:iTmp, "가")% 도발 했다!
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
		RETURN iTmp
	ENDIF
NEXT
; 대상 선택
iTmp = RAND:대상수
iTmp = 대상전체:iTmp
[IF_DEBUG]
LOCALS = 무작위 선택
CALL 총력전_UI_텍스트_추가(LOCALS, 칼라_파노랑)
LOCALS = 타겟수={대상수}, 0={대상전체:0}, 끝={대상전체:(대상수 - 1)}
CALL 총력전_UI_텍스트_추가(LOCALS, 칼라_파노랑)
LOCALS = 선택결과={iTmp}
CALL 총력전_UI_텍스트_추가(LOCALS, 칼라_파노랑)
[ENDIF]
RETURN iTmp

; n턴 동안 주의
; @총력전_목표_조준(대상수, 조준턴 = 1)
; #DIM 대상수
; #DIM DYNAMIC 조준턴

; 보스 조준 취소
; 캐릭터를 보스 조준에서 제거
; 캐릭터 조준 가능/다중 보스 조준 가능시 수정 필요...
; 필요하면 _텍스트 따로 분리
@총력전_목표_조준_취소(캐릭터)
#DIM 캐릭터
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp
; 총력전_보스_조준
; 보스 위치 조준인지 캐릭터 조준인지 확인 필요...
iTmp = FINDELEMENT(총력전_보스_조준, 캐릭터)
IF iTmp >= 0
	sTmp = %총력전_이름:(총력전_보스_조준:iTmp)%
	CALL ARRAYREMOVE_VAL(총력전_보스_조준, iTmp, 1, -1)
	; 따돌렸다?
	sTmp = %조사처리(sTmp, "가")% 보스에 조준을 피했다
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; GUI 업데이트
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
ENDIF

; 팀에 있는 목표 전체
; 대상 수정
@총력전_목표_전체(대상, 팀)
#DIM REF 대상
#DIM 팀 ; 목표 팀 REF?

; #DIM counter
#DIM DYNAMIC iCnt
#DIM DYNAMIC iTmp, 2

VARSET 대상, -1
iCnt = 0
FOR iTmp, 0, 총력전_캐릭터수
	iTmp:1 = 총력전_캐릭터상태(iTmp)
	SIF iTmp:1 == 0 || iTmp:1 == 총력전_상태_행동불능 || iTmp:1 == 총력전_상태_보스_행동불능
		CONTINUE
	IF 총력전_팀:iTmp == 팀
		대상:iCnt = iTmp
		iCnt ++
	ENDIF
NEXT

; _범위_번호 랑 _범위_위치 로 변경해야될거 같은데...
; 시작 목표 ID -> 위치 -> 범위 안 위치 -> 번호 -> 중복 확인수 대상 에 추가
; 스킬에서 목표 선택후 여기로
; 스킬에서 바로 쓸수 있게 총력전 번호로 변경
@총력전_목표_범위(대상, 목표, 팀 = -1, 범위 = 1)
#DIM REF 대상
#DIM 목표 ; 총력전ID
#DIM DYNAMIC 팀 ; 총력전ID
#DIM DYNAMIC 범위

#DIM DYNAMIC iPos ; 
#DIM DYNAMIC iChk, 총력전_캐릭터수 
#DIM DYNAMIC iChkNext, 총력전_캐릭터수 ; 다음 확인
#DIM DYNAMIC iTmp, 4

VARSET 대상, -1
VARSET iChkNext, -1

iPos = 총력전_위치:목표
대상:0 = iPos
iChkNext:0 = iPos

; 범위 안 위치 번호 수집
; VARSIZE 대상
FOR iTmp:3, 0, 범위
	ARRAYCOPY "iChkNext", "iChk"
	VARSET iChkNext, -1
	FOR iTmp, 0, 총력전_캐릭터수
		DEBUGPRINTFORML ichk:{iTmp} = {iChk:iTmp}
		IF iChk:iTmp == -1
			BREAK
		ENDIF
		FOR iTmp:1, 0, 총력전_캐릭터수
			iTmp:2 = 총력전_범위:(iChk:iTmp):(iTmp:1)
			DEBUGPRINTFORML range:{iChk:iTmp}:{iTmp:1} = {iTmp:2}
			IF iTmp:2 == -1
				BREAK
			ENDIF
			IF MATCH(대상, iTmp:2) <= 0
				; iTmp:3 = FINDELEMENT(대상, -1)
				대상:(FINDELEMENT(대상, -1)) = iTmp:2
				iChkNext:(FINDELEMENT(iChkNext, -1)) = iTmp:2
			ENDIF
		NEXT
	NEXT
NEXT

; 위치를 ID 로 변경
; + 팀 이 세팅 되있으면 그 팀만
VARSIZE 대상
FOR iTmp, 0, RESULT
	SIF 대상:iTmp < 0
		BREAK
	; 총력전 번호로
	대상:iTmp = FINDELEMENT(총력전_위치, 대상:iTmp)
	; 상태확인 + 팀 아군인지 확인
	iTmp:1 = 총력전_캐릭터상태(대상:iTmp)
	IF iTmp:1 == 0 || iTmp:1 == 총력전_상태_행동불능 || iTmp:1 == 총력전_상태_보스_행동불능 || (팀 != -1 && 총력전_팀:(대상:iTmp) != 팀)
		CALL ARRAYREMOVE_VAL(대상, iTmp, 1, -1)
		iTmp --
		CONTINUE
	ENDIF
NEXT

; 나중에 하자...
; @총력전_목표_피아식별(대상팀, 시전자팀)
; #DIM 대상팀
; #DIM 시전자팀

; #endregion == 목표선택 ==

; #region == 상태효과 ==
; 나중에 추가 총력전_상태효과_추가_텍스트
; 상태효과 추가와 맞는 텍스트 추가, 스탯 변경 1만 할때
; 예 아코 에 치명+치피 효과 텍스트 한줄로 하고싶으면 아직도 총력전_상태효과_추가 써야됨
; ======================
; feedback후 arg 순서 수정
@총력전_상태효과_추가(대상, 시전자, 종류, 양, 긍부정, 효과방식, 소비방식, 소비양, 스킬번호, 추가번호 = 0)
#DIM 대상
#DIM 시전자
#DIM 종류
#DIM 양
#DIM 긍부정 ; 0 = 부정, 1 = 긍정, 2 = 기타
#DIM 효과방식 ; REF?
#DIM 소비방식
#DIM 소비양
#DIM 스킬번호
#DIM DYNAMIC 추가번호

#DIM DYNAMIC iTmp, 2
#DIM DYNAMIC 적용번호 = -1
#DIM DYNAMIC 전효과양 = 0 ; 전 효과 양

; 버그 방지
IF 종류 <= 0
	DEBUGPRINTL WARNING 종류 0 상효 추가 시도
	DEBUGPRINTFORML 시전자:{시전자} | 스킬번호:{스킬번호}
	RETURN -1
ENDIF

; 대상에 빈 효과/중복 자리 찾기
; DEBUGPRINTFORML checking char: %총력전_이름:대상%
FOR iTmp, 0, 총력전_상태효과수
	; DEBUGPRINTFORML iTmp:{iTmp}
	; DEBUGPRINTFORML 스킬번호:{총력전_상효_스킬번호:대상:iTmp}.{총력전_상효_추가번호:대상:iTmp}
	IF 총력전_상효_종류:대상:iTmp == 0
		적용번호 = iTmp
		BREAK
	ELSEIF 총력전_상효_스킬번호:대상:iTmp == 스킬번호 && 총력전_상효_추가번호:대상:iTmp == 추가번호
		적용번호 = iTmp
		전효과양 = 총력전_상효_양:대상:적용번호
		BREAK
	ENDIF
NEXT
DEBUGPRINTFORML 상태효과 적용번호:{적용번호}

IF 적용번호 == -1
	DEBUGPRINTFORML **상태효과수 부족**
	[IF_DEBUG]
	CALL DEBUG_총력전_상효(대상)
	[ENDIF]
	적용번호 = 총력전_상태효과수 - 1
	CALL 총력전_상태효과_제거(대상, 0)
ENDIF

총력전_상효_종류:대상:적용번호 = 종류
총력전_상효_양:대상:적용번호 = 양
총력전_상효_긍부정:대상:적용번호 = 긍부정
총력전_상효_시전자:대상:적용번호 = 시전자
총력전_상효_스킬번호:대상:적용번호 = 스킬번호
총력전_상효_추가번호:대상:적용번호 = 추가번호
총력전_상효_효과방식_0:대상:적용번호 = 효과방식
총력전_상효_소비방식_0:대상:적용번호 = 소비방식
총력전_상효_소비양_0:대상:적용번호 = 소비양
총력전_상효_적용:대상:적용번호 = 0

; 테스트중 잘못 적용된 스킬번호 + 긍부정 확인용
[IF_DEBUG]
LOCALS = ({대상})({적용번호}) 종류:%총력전_종류_ENUM(종류)%, 양:{양}
LOCALS += @"%총력전_종류_백분율(종류) == 1 ? "％" # "" %, 스킬번호:{스킬번호}.{추가번호}"
SELECTCASE 긍부정
	CASE 0
		LOCALS = 디버프 추가: %LOCALS%
	CASE 1
		LOCALS = 버프 추가: %LOCALS%
	CASEELSE
		LOCALS = 특수효과 추가: %LOCALS%
ENDSELECT
CALL 총력전_UI_텍스트_추가(LOCALS, 칼라_파노랑)
[ENDIF]

; 코스트 감소면 코스트 계산
IF 종류 == 상효_종류_코스트감소 || 종류 == 상효_종류_코스트감소백분율
	CALL 총력전_스킬코스트(대상)
ENDIF

; 지속 효과면 미리 추가
IF 효과방식 == 총력전_방식_지속
	총력전_상효_적용:대상:적용번호 = 1
	IF 양 == 전효과양 || 양 == 0
		RETURN 1
	ENDIF
	SELECTCASE 종류
		CASE 상효_종류_최대체력
			총력전_최대체력:대상 += 양 - 전효과양
		CASE 상효_종류_최대체력백분율
			총력전_최대체력:대상 += (양 - 전효과양) * 총력전_최대체력_최초:대상  / 100
		CASE 상효_종류_공격력
			총력전_공격력:대상 += 양 - 전효과양
		CASE 상효_종류_공격력백분율
			총력전_공격력:대상 += (양 - 전효과양) * 총력전_공격력_최초:대상 / 100
		CASE 상효_종류_방어력
			총력전_방어력:대상 += 양 - 전효과양
		CASE 상효_종류_방어력백분율
			총력전_방어력:대상 += (양 - 전효과양) * 총력전_방어력_최초:대상 / 100
		CASE 상효_종류_명중률
			총력전_명중률:대상 += 양 - 전효과양
		CASE 상효_종류_명중률백분율
			총력전_명중률:대상 += (양 - 전효과양) * 총력전_명중률_최초:대상 / 100
		CASE 상효_종류_회피율
			총력전_회피율:대상 += 양 - 전효과양
		CASE 상효_종류_회피율백분율
			총력전_회피율:대상 += (양 - 전효과양) * 총력전_회피율_최초:대상 / 100
		CASE 상효_종류_치유력
			총력전_치유력:대상 += 양 - 전효과양
		CASE 상효_종류_치유력백분율
			총력전_치유력:대상 += (양 - 전효과양) * 총력전_치유력_최초:대상 / 100
		CASE 상효_종류_치명타
			총력전_치명타:대상 += 양 - 전효과양
		CASE 상효_종류_치명타저항
			총력전_치명타_저항:대상 += 양 - 전효과양
		CASE 상효_종류_치명타대미지
			총력전_치명타_대미지:대상 += 양 - 전효과양
		CASE 상효_종류_치명타대미지저항
			총력전_치명타_대미지_저항:대상 += 양 - 전효과양
		CASE 상효_종류_군중제어강화
			총력전_군중제어_강화:대상 += 양 - 전효과양
		CASE 상효_종류_군중제어저항
			총력전_군중제어_저항:대상 += 양 - 전효과양
	ENDSELECT
ENDIF
; CALL DEBUG_총력전_전
; PRINTW
RETURN 1

; 상태효과 하나만 추가할때 편하게 텍스트 추가 포함
@총력전_상태효과_추가_텍스트(대상, 시전자, 종류, 양, 긍부정, 효과방식, 소비방식, 소비양, 스킬번호, 추가번호 = 0)
#DIM 대상
#DIM 시전자
#DIM 종류
#DIM 양
#DIM 긍부정 ; 0 = 부정, 1 = 긍정, 2 = 기타
#DIM 효과방식 ; REF?
#DIM 소비방식
#DIM 소비양
#DIM 스킬번호
#DIM DYNAMIC 추가번호

#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp

CALL 총력전_상태효과_추가(대상, 시전자, 종류, 양, 긍부정, 효과방식, 소비방식, 소비양, 스킬번호, 추가번호)
; 스탯 처리
SELECTCASE 효과방식
	CASE 총력전_방식_공격
		CALL 총력전_상태효과_스탯처리(대상, 총력전_방식_공격)
	CASE 총력전_방식_피격
		CALL 총력전_상태효과_스탯처리(대상, 총력전_방식_피격)
	CASE 총력전_방식_명중
		CALL 총력전_상태효과_스탯처리(대상, 총력전_방식_명중)
	CASE 총력전_방식_회피
		CALL 총력전_상태효과_스탯처리(대상, 총력전_방식_회피)
	CASE 총력전_방식_치명타
		CALL 총력전_상태효과_스탯처리(대상, 총력전_방식_치명타)
	CASE 총력전_방식_치유
		CALL 총력전_상태효과_스탯처리(대상, 총력전_방식_치유)
	CASE 총력전_방식_스킬
		CALL 총력전_상태효과_스탯처리(대상, 총력전_방식_스킬)
ENDSELECT
; 소비 방식
SELECTCASE 소비방식
	CASE 총력전_방식_턴
		sTmp = {소비양}턴
	CASE 총력전_방식_공격
		sTmp = 다음 {소비양}번 기본 공격
	CASE 총력전_방식_피격
		sTmp = 다음 {소비양}번 피격 받기
	; CASE 총력전_방식_피격양
		; sTmp = 다음 대미지{소비양}받는동안?
	CASE 총력전_방식_명중
		sTmp = 다음 {소비양}번 명중
	CASE 총력전_방식_회피
		sTmp = 다음 {소비양}번 회피
	CASE 총력전_방식_치명타
		sTmp = 다음 {소비양}번 치명타
	CASE 총력전_방식_치유
		sTmp = 다음 {소비양}번 치유
	; CASE 총력전_방식_치유양
		; sTmp = 다음 {소비양}치유양 동안?
	CASE 총력전_방식_스킬
		sTmp = 다음 {소비양}번 스킬 시전
ENDSELECT
; 효과 방식
IF STRLENS(sTmp) > 0
	IF 효과방식 == 총력전_방식_지속
		IF 소비방식 == 총력전_방식_피격 || 소비방식 == 총력전_방식_회피 || 소비방식 == 총력전_방식_치유
			sTmp = %SUBSTRING(sTmp, 0, STRLENS(sTmp) - 1)%
			sTmp += @"하는 동안"
		ENDIF
		sTmp += @" 동안"
	ELSEIF 소비방식 == 총력전_방식_턴
		sTmp += @"간"
	ELSE
		sTmp += @" 전에"
	ENDIF
	sTmp += @" "
ENDIF
SELECTCASE 효과방식
	CASE 총력전_방식_턴
		IF 소비방식 != 총력전_방식_턴
			sTmp += @"턴 종료시"
		ENDIF
	CASE 총력전_방식_공격
		IF 소비방식 == 총력전_방식_공격
			sTmp = 다음 {소비양}번 기본 공격시
		ELSE
			sTmp += @"기본 공격시"
		ENDIF
	CASE 총력전_방식_피격
		IF 소비방식 == 총력전_방식_피격
			sTmp = 다음 {소비양}번 피격받을 시
		ELSE
			sTmp += @"피격받을 시"
		ENDIF
	CASE 총력전_방식_명중
		IF 소비방식 == 총력전_방식_명중
			sTmp = 다음 {소비양}번 명중시
		ELSE
			sTmp += @"명중시"
		ENDIF
	CASE 총력전_방식_회피
		IF 소비방식 == 총력전_방식_회피
			sTmp = 다음 {소비양}번 회피시
		ELSE
			sTmp += @"회피시"
		ENDIF
	CASE 총력전_방식_치명타
		IF 소비방식 == 총력전_방식_치명타
			sTmp = 다음 {소비양}번 치명타시
		ELSE
			sTmp += @"치명타시"
		ENDIF
	CASE 총력전_방식_치유
		IF 소비방식 == 총력전_방식_치유
			sTmp = 다음 {소비양}번 치유 받을시
		ELSE
			sTmp += @"치유 받을시"
		ENDIF
	CASE 총력전_방식_스킬
		IF 소비방식 == 총력전_방식_스킬
			sTmp = 다음 {소비양}번 스킬 시전시
		ELSE
			sTmp += @"스킬 시전시"
		ENDIF
ENDSELECT
; 종류 + 증가/감소
iTmp = STRLENS(sTmp)
IF iTmp > 0 && SUBSTRING(sTmp, iTmp - 1, -1) != " "
	sTmp += @" "
ENDIF
SELECTCASE 종류
	CASE 상효_종류_불사
		sTmp += @"%총력전_이름:대상% 불사 발동"
	CASE 상효_종류_도발
		sTmp += @"%조사처리(총력전_이름:대상, "가")% 적을 도발"
	CASE 상효_종류_피해동기화
		sTmp += @"%조사처리(총력전_이름:시전자, "와")% %조사처리(총력전_이름:대상, "가")% 피해 동기화"
	CASE 상효_종류_침묵, 상효_종류_혼란
		sTmp += @"%조사처리(총력전_이름:대상, "가")% %총력전_종류_ENUM(종류)%"
	; CASE 상효_종류_대미지
		; sTmp += @"%조사처리(총력전_이름:대상, "가")% 피해 ({양})"
	CASE 상효_종류_치유량, 상효_종류_대미지
		sTmp += @"%조사처리(총력전_이름:대상, "가")% %총력전_종류_ENUM(종류)% ({양})"
	CASE 상효_종류_치유강화, 상효_종류_피해감소, 상효_종류_피해감소백분율
		sTmp += @"%조사처리(총력전_이름:대상, "가")% %총력전_종류_ENUM(종류)%"
		IF 양 >= 0
			sTmp += @" 증가 (+"
		ELSE
			sTmp += @" 감소 ("
		ENDIF
		IF 총력전_종류_백분율(종류)
			sTmp += @"{양}％)"
		ELSE
			sTmp += @"{양})"
		ENDIF
	CASE 상효_종류_코스트감소, 상효_종류_코스트감소백분율
		sTmp += @"%조사처리(총력전_이름:대상, "의")% %총력전_종류_ENUM(종류)%"
		IF 양 >= 0
			sTmp += @" (-{양}"
		ELSE
			iTmp = STRLENS(sTmp)
			sTmp = SUBSTRING(sTmp, 0, iTmp - 2)
			sTmp += @" 증가 (+{양 * -1}"
		ENDIF
		IF 총력전_종류_백분율(종류)
			sTmp += @"％)"
		ELSE
			sTmp += @")"
		ENDIF
	CASEELSE
		sTmp += @"%조사처리(총력전_이름:대상, "의")% %총력전_종류_ENUM(종류)%"
		IF 양 >= 0
			sTmp += @" 증가 (+"
		ELSE
			sTmp += @" 감소 ("
		ENDIF
		IF 총력전_종류_백분율(종류)
			sTmp += @"{양}％)"
		ELSE
			sTmp += @"{양})"
		ENDIF
ENDSELECT
IF STRLENS(sTmp) > 0
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
ENDIF

; 종류 와 방식 이 일치하는 상태효과 양 합계를 반환 하는 함수
@총력전_상태효과_합계(캐릭터, 종류, 방식)
#FUNCTION
#DIM 캐릭터
#DIM 종류
#DIM 방식

#DIM DYNAMIC iTmp, 2

FOR iTmp, 0, 총력전_상태효과수
	SIF 총력전_상효_종류:캐릭터:iTmp == 0
		BREAK
	IF 총력전_상효_종류:캐릭터:iTmp == 종류 && 총력전_상효_효과방식_0:캐릭터:iTmp == 방식
		iTmp:1 += 총력전_상효_양:캐릭터:iTmp
	ENDIF
NEXT

RETURNF iTmp:1

; 상태효과 수, 방식 -1 효과방식 무시
@총력전_상태효과_수(캐릭터, 종류, 방식 = -1)
#FUNCTION
#DIM 캐릭터
#DIM 종류
#DIM DYNAMIC 방식

#DIM DYNAMIC iTmp, 2

FOR iTmp, 0, 총력전_상태효과수
	SIF 총력전_상효_종류:캐릭터:iTmp == 0
		BREAK
	IF 총력전_상효_종류:캐릭터:iTmp == 종류
		IF 방식 == -1
			iTmp:1 ++
		ELSEIF 총력전_상효_효과방식_0:캐릭터:iTmp == 방식
			iTmp:1 ++
		ENDIF
	ENDIF
NEXT
RETURNF iTmp:1

; 버프/디버프 수
@총력전_상태효과_수_긍부정(캐릭터, 긍부정)
#FUNCTION
#DIM 캐릭터
#DIM 긍부정
#DIM DYNAMIC iTmp, 2
FOR iTmp, 0, 총력전_상태효과수
	SIF 총력전_상효_종류:캐릭터:iTmp == 0
		BREAK
	IF 총력전_상효_긍부정:캐릭터:iTmp == 긍부정
		iTmp:1 ++
	ENDIF
NEXT
RETURNF iTmp:1

; 상태효과 번호 찾기, 없으면 RETURN -1
@총력전_상태효과_검색_스킬번호(캐릭터, 스킬번호, 추가번호 = 0)
#FUNCTION
#DIM 캐릭터
#DIM 스킬번호
#DIM DYNAMIC 추가번호

#DIM DYNAMIC iTmp, 2

FOR iTmp, 0, 총력전_상태효과수
	SIF 총력전_상효_종류:캐릭터:iTmp == 0
		BREAK
	IF 총력전_상효_스킬번호:캐릭터:iTmp == 스킬번호 && 총력전_상효_추가번호:캐릭터:iTmp == 추가번호
		RETURNF iTmp
	ENDIF
NEXT
RETURNF -1


; 스탯이 아닌 상태효과 적용
; 치유량, 코스트회복, 대미지
@총력전_상태효과_적용_기타(캐릭터, 효과방식)
#DIM 캐릭터
#DIM 효과방식

#DIM DYNAMIC iTmp, 3
#DIMS DYNAMIC sTmp

; 행동 불능 이변 스킵
SIF 총력전_상태:캐릭터 == 0 || 총력전_상태:캐릭터 == 총력전_상태_행동불능 || 총력전_상태:캐릭터 == 총력전_상태_보스_행동불능
	RETURN
FOR iTmp, 0, 총력전_상태효과수
	SIF 총력전_상효_종류:캐릭터:iTmp == 0
		BREAK
	; 이미 적용된 효과 OR 효과방식이 일치하지 않으면 건너뛰기
	SIF 총력전_상효_적용:캐릭터:iTmp == 1 || 총력전_상효_효과방식_0:캐릭터:iTmp != 효과방식
		CONTINUE
	SELECTCASE 총력전_상효_종류:캐릭터:iTmp
		CASE 상효_종류_치유량
			총력전_상효_적용:캐릭터:iTmp == 1
			; 무한 반복 등 다른 문제 생기면 수정
			CALL 총력전_처리_치유(총력전_상효_양:캐릭터:iTmp, 캐릭터, -1, 0)
		CASE 상효_종류_코스트회복
			총력전_상효_적용:캐릭터:iTmp == 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp / 100
			iTmp:2 = 총력전_상효_양:캐릭터:iTmp % 100
			sTmp = 코스트 추가 회복!({iTmp:1}.{iTmp:2})
			CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
			총력전_코스트_회복력 += 총력전_상효_양:캐릭터:iTmp
		CASE 상효_종류_대미지
			총력전_상효_적용:캐릭터:iTmp == 1
			; 무한 반복 등 다른 문제 생기면 수정
			CALL 총력전_처리_피격(총력전_상효_양:캐릭터:iTmp, 캐릭터, -1, 0, 0, 0)
	ENDSELECT
NEXT

; 상태효과 스탯 계산
@총력전_상태효과_스탯처리(캐릭터, 효과방식, 상효 = 1)
#DIM 캐릭터
#DIM 효과방식
#DIM DYNAMIC 상효 ; _상효 에 추가

#DIM DYNAMIC iTmp, 2

SIF 총력전_상태:캐릭터 == 0 || 총력전_상태:캐릭터 == 총력전_상태_행동불능 || 총력전_상태:캐릭터 == 총력전_상태_보스_행동불능
	RETURN
FOR iTmp, 0, 총력전_상태효과수
	SIF 총력전_상효_종류:캐릭터:iTmp == 0
		BREAK
	; 이미 적용된 효과 && 효과방식이 일치하지 않으면 건너뛰기
	SIF 총력전_상효_적용:캐릭터:iTmp == 1 && 총력전_상효_효과방식_0:캐릭터:iTmp != 효과방식
		CONTINUE
	SELECTCASE 총력전_상효_종류:캐릭터:iTmp
		CASE 상효_종류_최대체력
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_최대체력_상효:캐릭터 += iTmp:1
			ELSE
				총력전_최대체력:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_최대체력백분율
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp * 총력전_최대체력_최초:캐릭터 / 100
			IF 상효
				총력전_최대체력_상효:캐릭터 += iTmp:1
			ELSE
				총력전_최대체력:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_공격력
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_공격력_상효:캐릭터 += iTmp:1
			ELSE
				총력전_공격력:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_공격력백분율
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp * 총력전_공격력_최초:캐릭터 / 100
			IF 상효
				총력전_공격력_상효:캐릭터 += iTmp:1
			ELSE
				총력전_공격력:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_방어력
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_방어력_상효:캐릭터 += iTmp:1
			ELSE
				총력전_방어력:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_방어력백분율
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp * 총력전_방어력_최초:캐릭터 / 100
			IF 상효
				총력전_방어력_상효:캐릭터 += iTmp:1
			ELSE
				총력전_방어력:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_명중률
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_명중률_상효:캐릭터 += iTmp:1
			ELSE
				총력전_명중률:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_명중률백분율
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp * 총력전_명중률_최초:캐릭터 / 100
			IF 상효
				총력전_명중률_상효:캐릭터 += iTmp:1
			ELSE
				총력전_명중률:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_회피율
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_회피율_상효:캐릭터 += iTmp:1
			ELSE
				총력전_회피율:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_회피율백분율
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp * 총력전_회피율_최초:캐릭터 / 100
			IF 상효
				총력전_회피율_상효:캐릭터 += iTmp:1
			ELSE
				총력전_회피율:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_치유력
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_치유력_상효:캐릭터 += iTmp:1
			ELSE
				총력전_치유력:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_치유력백분율
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp * 총력전_치유력_최초:캐릭터 / 100
			IF 상효
				총력전_치유력_상효:캐릭터 += iTmp:1
			ELSE
				총력전_치유력:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_치명타
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_치명타_상효:캐릭터 += iTmp:1
			ELSE
				총력전_치명타:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_치명타저항
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_치명타_저항_상효:캐릭터 += iTmp:1
			ELSE
				총력전_치명타_저항:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_치명타대미지
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_치명타_대미지_상효:캐릭터 += iTmp:1
			ELSE
				총력전_치명타_대미지:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_치명타대미지저항
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_치명타_대미지_저항_상효:캐릭터 += iTmp:1
			ELSE
				총력전_치명타_대미지_저항:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_군중제어강화
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_군중제어_강화_상효:캐릭터 += iTmp:1
			ELSE
				총력전_군중제어_강화:캐릭터 += iTmp:1
			ENDIF
		CASE 상효_종류_군중제어저항
			총력전_상효_적용:캐릭터:iTmp = 1
			iTmp:1 = 총력전_상효_양:캐릭터:iTmp
			IF 상효
				총력전_군중제어_저항_상효:캐릭터 += iTmp:1
			ELSE
				총력전_군중제어_저항:캐릭터 += iTmp:1
			ENDIF
	ENDSELECT
NEXT


@총력전_상태효과_소비(캐릭터, 소비방식)
#DIM 캐릭터
#DIM 소비방식

#DIM DYNAMIC iTmp, 2
#DIMS DYNAMIC sTmp

; recheck infinite loop problem with COUNT, I could've been mistaken
iTmp = 0
REPEAT 총력전_상태효과수
	; DEBUGPRINTFORML number: {iTmp:0}
	IF 총력전_상효_종류:캐릭터:iTmp == 0
		iTmp:1 = MIN(총력전_상태효과수 - 1, iTmp + 1)
		; DEBUGPRINTFORML 다음 상태효과(종류 == 0)인지 확인: {총력전_상효_종류:캐릭터:(iTmp:1)}
		BREAK
	ENDIF
	
	IF 총력전_상효_소비방식_0:캐릭터:iTmp == 소비방식
		총력전_상효_소비양_0:캐릭터:iTmp -= 1
		IF 총력전_상효_소비양_0:캐릭터:iTmp <= 0
			CALL 총력전_상태효과_제거_텍스트(캐릭터, iTmp)
			iTmp:0 -- ; 상태효과가 사라져서 카운터 1 뒤로
		ENDIF
	ENDIF
	iTmp:0 ++
REND


@총력전_상태효과_제거(캐릭터, 상효번호)
#DIM 캐릭터
#DIM 상효번호

CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_종류, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_양, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_긍부정, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_시전자, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_스킬번호, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_추가번호, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_효과방식_0, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_소비방식_0, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_소비양_0, 캐릭터, 상효번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_상효_적용, 캐릭터, 상효번호)


; 상태효과 제거 + 텍스트 추가
; 추가도 비슷한 방식으로 가능
@총력전_상태효과_제거_텍스트(캐릭터, 상효번호)
#DIM 캐릭터
#DIM 상효번호

#DIMS DYNAMIC sTmp

; 상태효과 메세지 TRYCALL
sTmp = %총력전_이름:캐릭터%
sTmp += @" 상태효과(%총력전_종류_ENUM(총력전_상효_종류:캐릭터:상효번호)%:"
IF 총력전_상효_양:캐릭터:상효번호 > 0
	sTmp += @"+{총력전_상효_양:캐릭터:상효번호}"
ELSE
	sTmp += @"{총력전_상효_양:캐릭터:상효번호}"
ENDIF
IF 총력전_종류_백분율(총력전_상효_종류:캐릭터:상효번호) == 1
	sTmp += @"％)"
ELSE
	sTmp += @")"
ENDIF
sTmp += @" 종료"
CALL 총력전_UI_텍스트_추가(sTmp)
CALL 총력전_상태효과_제거(캐릭터, 상효번호)
; UI 업데이트
CALL 총력전_UI_Main(0)
WAITANYKEY

; 디버프 제거수 만큼 제거
@총력전_상태효과_제거_디버프(캐릭터, 제거수 = 1)
#DIM 캐릭터
#DIM DYNAMIC 제거수 ; -1 이면 전부

#DIM DYNAMIC 제거된수
#DIM DYNAMIC iTmp, 2

IF 제거수 == -1
	제거수 = 총력전_상태효과수
ENDIF

iTmp = 0
FOR iTmp:1, 0, 총력전_상태효과수
	IF 총력전_상효_종류:캐릭터:iTmp == 0 || 제거된수 >= 제거수
		BREAK
	ENDIF
	IF 총력전_상효_긍부정:캐릭터:iTmp == 0
		; 지속이면 다시 계산
		IF 총력전_상효_효과방식_0:캐릭터:iTmp == 총력전_방식_지속
			CALL 총력전_상태효과_제거_텍스트(캐릭터, iTmp)
			CALL 총력전_처리_스탯(캐릭터)
		ELSE
			CALL 총력전_상태효과_제거_텍스트(캐릭터, iTmp)
		ENDIF
		; 상태효과 제거, 카운터 하나 뒤로
		iTmp --
		제거된수 ++
	ENDIF
	iTmp ++
NEXT


; 버프 제거수 만큼 제거
@총력전_상태효과_제거_버프(캐릭터, 제거수 = 1)
#DIM 캐릭터
#DIM DYNAMIC 제거수 ; -1 이면 전부

#DIM DYNAMIC 제거된수
#DIM DYNAMIC iTmp, 2

IF 제거수 == -1
	제거수 = 총력전_상태효과수
ENDIF

iTmp = 0
FOR iTmp:1, 0, 총력전_상태효과수
	IF 총력전_상효_종류:캐릭터:iTmp == 0 || 제거된수 >= 제거수
		BREAK
	ENDIF
	IF 총력전_상효_긍부정:캐릭터:iTmp == 1
		; 지속이면 다시 계산
		IF 총력전_상효_효과방식_0:캐릭터:iTmp == 총력전_방식_지속
			CALL 총력전_상태효과_제거_텍스트(캐릭터, iTmp)
			CALL 총력전_처리_스탯(캐릭터)
		ELSE
			CALL 총력전_상태효과_제거_텍스트(캐릭터, iTmp)
		ENDIF
		; 상태효과 제거, 카운터 하나 뒤로
		iTmp --
		제거된수 ++
	ENDIF
	iTmp ++
NEXT


; #endregion == 상태효과 ==

; #region == 카운터 ==
; 추가양 은 0으로
@총력전_카운터_추가(대상, 시전자, 증가방식, 소비방식, 소비양, 스킬번호, 추가번호 = 0)
#DIM 대상
#DIM 시전자
#DIM 증가방식
; #DIM 추가양_최대
#DIM 소비방식
#DIM 소비양
#DIM 스킬번호
#DIM DYNAMIC 추가번호

#DIM DYNAMIC 적용번호 = -1
#DIM DYNAMIC 중복 = 0 ; 카운터 중복이 있었으면 = 1
#DIM DYNAMIC iTmp, 2

; 버그 방지
IF 증가방식 <= 0
	DEBUGPRINTL WARNING 종류 0 상효 추가 시도
	DEBUGPRINTFORML 시전자:{시전자} | 스킬번호:{스킬번호}
	RETURN
ENDIF

; 대상에 빈 효과/중복 자리 찾기
FOR iTmp, 0, 총력전_상태효과수
	IF 총력전_카운터_증가방식:대상:iTmp == 0
		적용번호 = iTmp
		BREAK
	ELSEIF 총력전_카운터_스킬번호:대상:iTmp == 스킬번호 && 총력전_카운터_추가번호:대상:iTmp == 추가번호
		중복 = 1
		적용번호 = iTmp
		BREAK
	ENDIF
NEXT
DEBUGPRINTFORML ({대상}) 카운터 적용번호:{적용번호}

IF 적용번호 == -1
	DEBUGPRINTFORML **카운터수 부족**
	적용번호 = 총력전_카운터수 - 1
	CALL 총력전_카운터_제거(대상, 0)
ENDIF

총력전_카운터_증가방식:대상:적용번호 = 증가방식
SIF 중복 == 0
	총력전_카운터_증가양:대상:적용번호 = 0
; 총력전_카운터_증가양_최대:대상:적용번호 = 추가양_최대
총력전_카운터_소비방식:대상:적용번호 = 소비방식
총력전_카운터_소비양:대상:적용번호 = 소비양
총력전_카운터_시전자:대상:적용번호 = 시전자
총력전_카운터_스킬번호:대상:적용번호 = 스킬번호
총력전_카운터_추가번호:대상:적용번호 = 추가번호


; 카운터 증가 + 소비가 다를 필요가 없을거 같은데... 
; 이해하기 쉬운 함수 이름이 생각않나서 나중에 수정
; 아니면 카운터 텍스트 추가?
; 대상 = 기본공격, 피격시 상대 캐릭터
@총력전_카운터_증가(캐릭터, 대상, 증가방식, 증가양 = 1)
#DIM 캐릭터
#DIM 대상 ; -1 이면 무시
#DIM 증가방식
#DIM DYNAMIC 증가양

#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp

iTmp = 0
REPEAT 총력전_카운터수
	SIF 총력전_카운터_증가방식:캐릭터:iTmp == 0
		BREAK
	IF 총력전_카운터_증가방식:캐릭터:iTmp == 증가방식
		[IF_DEBUG]
		sTmp = %총력전_이름:캐릭터% 카운터 증가 {총력전_카운터_스킬번호:캐릭터:iTmp}.{총력전_카운터_추가번호:캐릭터:iTmp} = {총력전_카운터_증가양:캐릭터:iTmp} + {증가양}
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
		[ENDIF]
		TRYCCALLFORM 총력전_스킬_{총력전_카운터_스킬번호:캐릭터:iTmp}_{총력전_카운터_추가번호:캐릭터:iTmp}_카운터_증가(캐릭터, 대상, iTmp, 증가양)
		CATCH
			총력전_카운터_증가양:캐릭터:iTmp += 증가양
		ENDCATCH
	ENDIF
	iTmp ++
REND

@총력전_카운터_소비(캐릭터, 소비방식, 소비양 = 1)
#DIM 캐릭터
#DIM 소비방식
#DIM DYNAMIC 소비양

#DIM DYNAMIC iTmp, 2
#DIMS DYNAMIC sTmp

iTmp = 0
REPEAT 총력전_카운터수
	SIF 총력전_카운터_증가방식:캐릭터:iTmp == 0
		BREAK
	IF 총력전_카운터_소비방식:캐릭터:iTmp == 소비방식
		[IF_DEBUG]
		sTmp = %총력전_이름:캐릭터% 카운터 소비 {총력전_카운터_스킬번호:캐릭터:iTmp}.{총력전_카운터_추가번호:캐릭터:iTmp} = {총력전_카운터_소비양:캐릭터:iTmp} - {소비양}
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
		[ENDIF]
		; 카운터 소비 TRYCALL... 필요?
		총력전_카운터_소비양:캐릭터:iTmp -= 소비양
		IF 총력전_카운터_소비양:캐릭터:iTmp <= 0
			; 카운터_종료 TRYCALL
			TRYCCALLFORM 총력전_스킬_{총력전_카운터_스킬번호:캐릭터:iTmp}_{총력전_카운터_추가번호:캐릭터:iTmp}_카운터_종료(캐릭터, iTmp)
			CATCH
				CALL 총력전_카운터_제거(캐릭터, iTmp)
			ENDCATCH
			iTmp -- ; 사라져서 카운터 1 뒤로
		ENDIF
	ENDIF
	iTmp ++
REND

@총력전_카운터_제거(캐릭터, 카운터번호)
#DIM 캐릭터
#DIM 카운터번호

CALL 총력전_ARRAYREMOVE_VAL(총력전_카운터_증가방식, 캐릭터, 카운터번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_카운터_증가양, 캐릭터, 카운터번호)
; CALL 총력전_ARRAYREMOVE_VAL(총력전_카운터_증가양_최대, 캐릭터, 카운터번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_카운터_소비방식, 캐릭터, 카운터번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_카운터_소비양, 캐릭터, 카운터번호)

CALL 총력전_ARRAYREMOVE_VAL(총력전_카운터_시전자, 캐릭터, 카운터번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_카운터_스킬번호, 캐릭터, 카운터번호)
CALL 총력전_ARRAYREMOVE_VAL(총력전_카운터_추가번호, 캐릭터, 카운터번호)

; 카운터 번호 찾기, 없으면 RETURN -1
@총력전_카운터_검색_스킬번호(캐릭터, 스킬번호, 추가번호 = 0)
#DIM 캐릭터
#DIM 스킬번호
#DIM DYNAMIC 추가번호

#DIM iTmp

FOR iTmp, 0, 총력전_카운터수
	SIF 총력전_카운터_증가방식:캐릭터:iTmp == 0
		BREAK
	IF 총력전_카운터_스킬번호:캐릭터:iTmp == 스킬번호 && 총력전_카운터_추가번호:캐릭터:iTmp == 추가번호
		RETURN iTmp
	ENDIF
NEXT
RETURN -1

; #endregion == 카운터 ==

; #region == 엄폐물 ==
; 위치로 하면 스킬 시전시 converting 필요...
; 하지만 총력전 번호 로 하면 했갈릴 확률 있음...
; ====================
; 엄폐물 추가
@총력전_엄폐물_추가(위치, 시전자, 소비방식, 소비양, 스킬번호, 추가번호 = 0)
#DIM 위치
#DIM 시전자
#DIM REF 소비방식, 0 ; 2 일거라 가정?
#DIM REF 소비양, 0
; #DIM 소비방식_1
; #DIM 소비양_1
#DIM 스킬번호
#DIM DYNAMIC 추가번호

#DIM DYNAMIC 엄폐물번호
#DIM DYNAMIC iTmp, 2

; 위치에 있는 엄폐물 번호 확인
; 임시노등, 엄폐물이 움직였으면
엄폐물번호 = FINDELEMENT(총력전_엄폐물_위치, 위치)

; 위치에 엄폐물 있는지 확인?
; 정할때 없는곳으로 정할거간 하지만...
; 아니면 있는 엄폐물 제거 + 새로 소환?
[IF_DEBUG]
IF 총력전_엄폐물_소비방식:엄폐물번호:0 > 0
	CALLF ERROR(@"Cover spawn location is already occupied = loc:{위치} raidID:{엄폐물번호} OR cover did not despawn properly")
ENDIF
[ENDIF]
VARSIZE 소비방식
iTmp:1 = MIN(RESULT, 2)
FOR iTmp, 0, iTmp:1
	총력전_엄폐물_소비방식:엄폐물번호:iTmp = 소비방식:iTmp
	총력전_엄폐물_소비양:엄폐물번호:iTmp = 소비양:iTmp
NEXT
총력전_엄폐물_스킬번호:엄폐물번호 = 스킬번호
총력전_엄폐물_추가번호:엄폐물번호 = 추가번호
총력전_엄폐물_팀:엄폐물번호 = 총력전_팀:시전자
총력전_엄폐물_위치:엄폐물번호 = 위치
총력전_엄폐물_위치_부착:엄폐물번호 = 0 ; 필요하면 스킬에서 추가 수정
; 총력전_엄폐물_스킬방식:엄폐물번호 = 0 ; ^
; 스킬 있으면 바로 시전
TRYCALLFORM 총력전_엄폐물_{총력전_엄폐물_스킬번호:엄폐물번호}_{총력전_엄폐물_추가번호:엄폐물번호}_스킬(엄폐물번호)

; 엄폐물 소비
; RETURN 남은 양
; 소비방식_0 = 총력전_방식_피격양, 소비방식_1 = 총력전_방식_피격양 등, 중복 소비방식은 없을거라 가정
@총력전_엄폐물_소비(위치, 소비방식, 소비양, 팀 = -1)
#DIM 위치
#DIM 소비방식
#DIM 소비양
#DIM DYNAMIC 팀

#DIM DYNAMIC 엄폐물번호
#DIM DYNAMIC 남은양
#DIM DYNAMIC 소비, 2 ; BOOL 소비양_0, 소비양_1 소비 할지
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp

엄폐물번호 = FINDELEMENT(총력전_엄폐물_위치, 위치)

IF 총력전_엄폐물_소비방식:엄폐물번호:0 == 0
	RETURN 소비방식
ENDIF
; 소비 trycall?
[IF_DEBUG]
sTmp = 엄폐물 소비
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
sTmp = %총력전_방식_ENUM(총력전_엄폐물_소비방식:엄폐물번호:0)%:{총력전_엄폐물_소비양:엄폐물번호:0}, %총력전_방식_ENUM(총력전_엄폐물_소비방식:엄폐물번호:1)%:{총력전_엄폐물_소비양:엄폐물번호:1}
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
sTmp = 감소: %총력전_방식_ENUM(소비방식)%:{소비양}
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
[ENDIF]
FOR iTmp, 0, 2
	IF 총력전_엄폐물_소비방식:엄폐물번호:iTmp == 소비방식
		소비 = 0
		; 팀 확인, 소비 할지
		IF 팀 == -1
			소비 = 1
		ELSEIF 총력전_엄폐물_팀:엄폐물번호 != 팀
			소비 = 1
		ENDIF
		IF 소비 == 1
			; 피격(방식_피격양) 계산위해 남은 양 있으면 RETURN
			남은양 = MAX(소비양 - 총력전_엄폐물_소비양:엄폐물번호:iTmp, 0)
			총력전_엄폐물_소비양:엄폐물번호:iTmp -= 소비양
			; 소비양 없으면
			IF 총력전_엄폐물_소비양:엄폐물번호:iTmp <= 0
				; 엄폐물 제거
				CALL 총력전_엄폐물_제거_텍스트(엄폐물번호)
				RETURN 남은양
			ENDIF
			; RETURN 0
			RETURN 남은양
		ENDIF
	ENDIF
NEXT
; 일치하는 소비 방식이 없으면
RETURN 소비양


; 엄폐물 제거 + 텍스트
; 텍스트 필요없으면 @총력전_해제_엄폐물(엄폐물)
@총력전_엄폐물_제거_텍스트(엄폐물번호)
#DIM 엄폐물번호

#DIM DYNAMIC 위치
#DIM DYNAMIC 캐릭터
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp
캐릭터 = FINDELEMENT(총력전_위치, 총력전_엄폐물_위치:엄폐물번호)
sTmp = %총력전_이름:캐릭터%
IF STRLENS(sTmp) > 0
	; 만료?
	sTmp = %조사처리(sTmp, "의")% 엄폐물 소멸
ELSE
	sTmp = 엄폐물 소멸
ENDIF
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
CALL 총력전_해제_엄폐물(엄폐물번호)

; 스킬 번호로 엄폐물 있는지 확인
@총력전_엄폐물_검색_스킬번호(스킬번호, 추가번호 = 0)
#FUNCTION
#DIM 스킬번호
#DIM DYNAMIC 추가번호

#DIM DYNAMIC iTmp, 2

FOR iTmp, 0, 총력전_캐릭터수
	; DEBUGPRINTFORML searching {스킬번호}.{추가번호}, starting {iTmp}
	iTmp:1 = FINDELEMENT(총력전_엄폐물_스킬번호, 스킬번호, iTmp)
	; DEBUGPRINTFORML = {iTmp:1}
	IF iTmp:1 < 0
		RETURNF -1
	ELSEIF 총력전_엄폐물_추가번호:(iTmp:1) == 추가번호
		; 추가번호까지 일치하면
		RETURNF iTmp:1
	ENDIF
	; 추가번호 일치하지 않으면 iTmp:1 번호부터 다시 서치
	iTmp = iTmp:1
NEXT
; 여기 까지 오진 않겠지만
RETURNF -1

; #endregion == 엄폐물 ==


; #region == 스탯 ==
; 
; ----- 지략 스탯 보정 -----
; 이전 버전 노트: 
; 지략보정 지략 100일때 최대 2배 50 이하일때 1배
; 지략 100일때 최대 60%
; 회피율 지략,방위합 200일때 최대 20%
; 캐릭터 지략(2025/05): 상10%(~104.4) 하10%(~23.3)
; 모든 캐릭터 (초기 스탯 + 상태 효과)
; ==================
@총력전_처리_스탯_전(체력클램프 = 0)
#DIM DYNAMIC 체력클램프

#DIM DYNAMIC iTmp

FOR iTmp, 0, 총력전_캐릭터수
	; 상태가 "무" 이면 스킵
	SIF !총력전_상태:iTmp
		CONTINUE
	CALL 총력전_처리_스탯(iTmp, 체력클램프)
NEXT

; 초기 스탯 + 상태 효과, 턴 시작시 적용?
@총력전_처리_스탯(캐릭터, 체력클램프 = 0)
#DIM 캐릭터
#DIM DYNAMIC 체력클램프

#DIM DYNAMIC iTmp

; 무지성 스탯 리셋
CALL 총력전_초기화_스탯(캐릭터)

; 상태효과:지속
CALL 총력전_상태효과_스탯처리(캐릭터, 총력전_방식_지속, 0)

; 체력이 최대 이상이면 CLAMP
IF 체력클램프 && 총력전_체력:캐릭터 > 총력전_최대체력:캐릭터
	총력전_체력:캐릭터 = 총력전_최대체력:캐릭터
ENDIF

; 모든 캐릭터 스탯 초기화
@총력전_초기화_스탯_전
#DIM DYNAMIC iTmp

FOR iTmp, 0, 총력전_캐릭터수
	; 상태가 "무" 이면 스킵
	SIF !총력전_상태:iTmp
		CONTINUE
	; ID 가 있으면 최초 스탯 계산
	CALL 총력전_최초스탯계산(iTmp)
	CALL 총력전_초기화_스탯(iTmp, 1)
NEXT

; 스탯 초기화
; 리셋 == 1 -> 체력 = 최대체력, 군중제어 = 0
@총력전_초기화_스탯(캐릭터, 리셋 = 0)
#DIM DYNAMIC 캐릭터
#DIM DYNAMIC 리셋

총력전_최대체력:캐릭터 = 총력전_최대체력_최초:캐릭터
SIF 리셋 
	총력전_체력:캐릭터 = 총력전_최대체력:캐릭터 
총력전_공격력:캐릭터 = 총력전_공격력_최초:캐릭터
총력전_방어력:캐릭터 = 총력전_방어력_최초:캐릭터
총력전_명중률:캐릭터 = 총력전_명중률_최초:캐릭터
총력전_회피율:캐릭터 = 총력전_회피율_최초:캐릭터
총력전_치유력:캐릭터 = 총력전_치유력_최초:캐릭터

총력전_치명타:캐릭터 = 총력전_치명타_최초:캐릭터
총력전_치명타_저항:캐릭터 = 총력전_치명타_저항_최초:캐릭터
총력전_치명타_대미지:캐릭터 = 총력전_치명타_대미지_최초:캐릭터
총력전_치명타_대미지_저항:캐릭터 = 총력전_치명타_대미지_저항_최초:캐릭터

총력전_군중제어_한계:캐릭터 = 총력전_군중제어_한계_최초:캐릭터
SIF 리셋 
	총력전_군중제어:캐릭터 = 0
총력전_군중제어_강화:캐릭터 = 총력전_군중제어_강화_최초:캐릭터
총력전_군중제어_저항:캐릭터 = 총력전_군중제어_저항_최초:캐릭터

; 최초 스탯*만* 계산
@총력전_최초스탯계산(캐릭터)
#DIM 캐릭터

#DIM DYNAMIC 함락계수 = 100
#DIM DYNAMIC iTmp

IF 총력전_ID:캐릭터 < 0
	DEBUGPRINTFORML ID 있는 캐릭터가 아님 (총력전_ID:{캐릭터} = {총력전_ID:캐릭터})
	RETURN
ENDIF

DEBUGPRINTFORML %TOSTR_REPEAT("-",30)%
DEBUGPRINTFORML Calculating Stat: %ANAME(총력전_ID:캐릭터)%
DEBUGPRINTFORML %TOSTR_REPEAT("-",30)%

; ----- 함락 계수 -----
; 아군만 적용?
IF 총력전_팀:캐릭터 == 0
	IF TALENT:(총력전_ID:캐릭터):친구
		함락계수 += 5
	ELSEIF TALENT:(총력전_ID:캐릭터):연모
		함락계수 += 5
	ELSEIF TALENT:(총력전_ID:캐릭터):친애
		함락계수 += 15
	ELSEIF TALENT:(총력전_ID:캐릭터):정실
		함락계수 += 20
	ELSEIF TALENT:(총력전_ID:캐릭터):첩
		함락계수 += 10
	ELSEIF TALENT:(총력전_ID:캐릭터):복종
		함락계수 += 5
	ELSEIF TALENT:(총력전_ID:캐릭터):예속
		함락계수 += 10
	ENDIF
ENDIF
; ----- 최초 스탯 -----
; 나중에 최종 스탯 150 ~ 300 정도 로 수정
; x2 정도를 한 ~150 정도로 맞춰서
DEBUGPRINTFORML 체력: {MAXBASE:(총력전_ID:캐릭터):체력}
DEBUGPRINTFORML 무투: {ABL:(총력전_ID:캐릭터):무투}
DEBUGPRINTFORML 방위: {ABL:(총력전_ID:캐릭터):방위}
DEBUGPRINTFORML 지략: {ABL:(총력전_ID:캐릭터):지략}
DEBUGPRINTFORML 정치: {ABL:(총력전_ID:캐릭터):정치}
DEBUGPRINTFORML 요리: {ABL:(총력전_ID:캐릭터):요리}
DEBUGPRINTFORML 가창: {ABL:(총력전_ID:캐릭터):가창}
DEBUGPRINTFORML %TOSTR_REPEAT("-",30)%
; 최대체력
; 장비 스탯은 MAXBASE 에 이미 적용 됬음
총력전_최대체력_최초:캐릭터 = MAXBASE:(총력전_ID:캐릭터):체력 * 함락계수 / 100
DEBUGPRINTFORML 최대체력: 최대체력({MAXBASE:(총력전_ID:캐릭터):체력}) * 함락계수({함락계수}％)
DEBUGPRINTFORML = {총력전_최대체력_최초:캐릭터}
; 공격력: 지략보정 40(x1) ~ 300(x2.5)
총력전_공격력_최초:캐릭터 = ABL:(총력전_ID:캐릭터):무투 * REMAP_CLAMP(ABL:(총력전_ID:캐릭터):지략, 40, 300, 100, 250) * 함락계수 / 10000
DEBUGPRINTFORML 공격력: 무투({ABL:(총력전_ID:캐릭터):무투}) * 지략보정({REMAP_CLAMP(ABL:(총력전_ID:캐릭터):지략, 40, 300, 100, 300)}％) * 함락계수({함락계수}％)
DEBUGPRINTFORML = {총력전_공격력_최초:캐릭터}
; 방어력: 방위 * 1.2 * 함락
총력전_방어력_최초:캐릭터 = ABL:(총력전_ID:캐릭터):방위 * 12 * 함락계수 / 1000
DEBUGPRINTFORML 방어력: 방위({ABL:(총력전_ID:캐릭터):방위}) * 120％ * 함락계수({함락계수}％)
DEBUGPRINTFORML = {총력전_방어력_최초:캐릭터}
; 명중률 (명중 - 회피) -> 계산 방식으로 후에 변경
총력전_명중률_최초:캐릭터 = 95
; 회피율: 방위 * 가창보정 15(x1) ~ 170(x2)
; 회피율 = 10 은 10% 가 아님, 처리_피격 참조 
총력전_회피율_최초:캐릭터 = ABL:(총력전_ID:캐릭터):방위 * REMAP_CLAMP(ABL:(총력전_ID:캐릭터):가창, 15, 170, 100, 200) * 함락계수 / 10000
DEBUGPRINTFORML 회피율: 방위({ABL:(총력전_ID:캐릭터):방위}) * 가창보정({REMAP_CLAMP(ABL:(총력전_ID:캐릭터):가창, 15, 170, 100, 200)}％) * 함락계수({함락계수}％)
DEBUGPRINTFORML = {총력전_회피율_최초:캐릭터}
; 치유력: 지략 * 요리보정 10(x1) ~ 130(x1.3)
; 스탯 조정후 요리보정 양 늘리기
총력전_치유력_최초:캐릭터 = ABL:(총력전_ID:캐릭터):지략 * 15 * REMAP_CLAMP(ABL:(총력전_ID:캐릭터):요리, 10, 130, 100, 150) * 함락계수 / 100000
DEBUGPRINTFORML 치유력: 지략({ABL:(총력전_ID:캐릭터):방위}) * 요리보정({REMAP_CLAMP(ABL:(총력전_ID:캐릭터):요리, 10, 130, 100, 150)}％) * 함락계수({함락계수}％)
DEBUGPRINTFORML = {총력전_치유력_최초:캐릭터}
; 치명타
; 치명타 = 10 은 10%가 아님, 처리_피격 참조
총력전_치명타_최초:캐릭터 = ABL:(총력전_ID:캐릭터):지략 * 함락계수 / 100
DEBUGPRINTFORML 치명타: 지략({ABL:(총력전_ID:캐릭터):방위}) * 함락계수({함락계수}％)
DEBUGPRINTFORML = {총력전_치유력_최초:캐릭터}
총력전_치명타_저항_최초:캐릭터 = 10
총력전_치명타_대미지_최초:캐릭터 = 150
총력전_치명타_대미지_저항_최초:캐릭터 = 0
총력전_군중제어_한계_최초:캐릭터 = 1000
총력전_군중제어_강화_최초:캐릭터 = 0
총력전_군중제어_저항_최초:캐릭터 = 0
; ----- 무기 스탯 추가 -----
; 지금 무기는 기본 스탯만 추가하는듯?
; ----- 장비 스탯 추가 -----
; 방어력 * 2 / 3 -> 방위 추가는 빼기로
; 체력은 이미 장착시 추가 됬는데... 보너스로 더하는건가?
SIF 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비최대체력
	총력전_최대체력_최초:캐릭터 += 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비최대체력
SIF 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비명중률
	총력전_명중률_최초:캐릭터 += 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비명중률
SIF 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비회피수치
	총력전_회피율_최초:캐릭터 += 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비회피수치
SIF 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치유력
	총력전_치유력_최초:캐릭터 += 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치유력

SIF 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치명수치
	총력전_치명타_최초:캐릭터 += 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치명수치
SIF 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치명저항력
	총력전_치명타_저항_최초:캐릭터 += 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치명저항력
SIF 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치명대미지
	총력전_치명타_대미지_최초:캐릭터 += 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치명대미지
SIF 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치명대미지저항률
	총력전_치명타_대미지_저항_최초:캐릭터 += 총력전장비스탯상승:(총력전_ID:캐릭터):총력전장비치명대미지저항률
; #endregion == 스탯 ==

; #region == 소환물 ==
; Rid = Raid Id
; 소환, 최초 스탯 복사
; 스킬에서 필요한 스탯만 추가 수정 하면 되게
; ====================
@총력전_소환물_소환(iRid, iSummoner)
#DIM iRid ; 소환 총력전 번호
#DIM iSummoner ; 소환사 총력전 번호

총력전_상태:iRid = 총력전_상태_소환 ; 스킬 에서 수정
총력전_ID:iRid = 총력전_ID:iSummoner
총력전_팀:iRid = 총력전_팀:iSummoner
; 이미지 있으면 스킬에서 설정
총력전_이미지_초기:iRid = 
총력전_이미지:iRid = 

; 스킬은 쿨다운후 TRYCALL 총력전_소환_{번호}_스킬
총력전_스킬_이름:iRid = %총력전_스킬_이름:iSummoner%
총력전_스킬_번호:iRid = 총력전_스킬_번호:iSummoner
총력전_스킬_쿨다운:iRid = 0

; 소환후 총력전_처리_스탯
총력전_최대체력_최초:iRid = 총력전_최대체력_최초:iSummoner
총력전_공격력_최초:iRid = 총력전_공격력_최초:iSummoner
총력전_방어력_최초:iRid = 총력전_방어력_최초:iSummoner
총력전_명중률_최초:iRid = 총력전_명중률_최초:iSummoner
총력전_회피율_최초:iRid = 총력전_회피율_최초:iSummoner
총력전_치유력_최초:iRid = 총력전_치유력_최초:iSummoner
총력전_치명타_최초:iRid = 총력전_치명타_최초:iSummoner
총력전_치명타_저항_최초:iRid = 총력전_치명타_저항_최초:iSummoner
총력전_치명타_대미지_최초:iRid = 총력전_치명타_대미지_최초:iSummoner
총력전_치명타_대미지_저항_최초:iRid = 총력전_치명타_대미지_저항_최초:iSummoner
총력전_군중제어_한계_최초:iRid = 총력전_군중제어_한계_최초:iSummoner
총력전_군중제어_강화_최초:iRid = 총력전_군중제어_강화_최초:iSummoner
총력전_군중제어_저항_최초:iRid = 총력전_군중제어_저항_최초:iSummoner

; 소환전 소환수 자리가 없으면 지속시간(카운터 0번) 가장 낮은거 제거
@총력전_소환물_소환수관리(스킬번호, 제한수 = 1)
#DIM 스킬번호
#DIM DYNAMIC 제한수

#DIM DYNAMIC 소환물번호, 총력전_캐릭터수 ; 제한수
#DIM DYNAMIC 소환물지속카운터번호 ; 지속시간 추가번호
#DIM DYNAMIC 최소소환번호
#DIM DYNAMIC 최소소환시간 ; 최소 남은 소환 시간
#DIM DYNAMIC iTmp, 2

; 소환수 확인
VARSET 소환물번호, -1
FOR iTmp, 0, 제한수
	IF iTmp == 0
		iTmp:1 = 0
	ELSE
		iTmp:1 = 소환물번호:(iTmp - 1) + 1
	ENDIF
	소환물번호:iTmp = 총력전_소환물_번호(스킬번호, iTmp:1)
	; DEBUGPRINTFORML ({iTmp}) start check {iTmp:1} = {소환물번호:iTmp}
	SIF 소환물번호:iTmp == -1
		BREAK
NEXT
; 자리 있으면 RETURN
IF 소환물번호:(제한수 - 1) == -1
	RETURN
ENDIF
; 제한수 1 이면 있는 소환물 제거후 RETURN
IF 제한수 == 1
	TRYCALLFORM 총력전_소환_{스킬번호}_해제(소환물번호)
	CALL 총력전_해제_캐릭터(소환물번호)
	RETURN
ENDIF
; CALL 총력전_UI_Main(0)
; WAITANYKEY
; 자리 없으면 남은시간 적은 소환물 제거
; 소환물 카운터 번호(0이여 야 하겟지만) 찾기
소환물지속카운터번호 = -1
FOR iTmp, 0, 10 ; 필요시 증가
	CALL 총력전_카운터_검색_스킬번호(소환물번호:0, 스킬번호, iTmp)
	iTmp:1 = RESULT
	SIF iTmp:1 == -1
		CONTINUE
	IF 총력전_카운터_소비방식:(소환물번호:0):(iTmp:1) == 총력전_방식_턴
		소환물지속카운터번호 = iTmp:1
		BREAK
	ENDIF
NEXT
; 지속 시간 없으면 체력 가장 적은 소환물
IF 소환물지속카운터번호 == -1
	[IF_DEBUG]
	DEBUGPRINTFORML 소환물 %총력전_이름:(소환물번호:0)% 지속시간 카운터 번호 못찾음
	CALL 총력전_UI_텍스트_추가("소환물 지속시간 카운터 못찾음, 디버그 참조", 칼라_빨강)
	WAITANYKEY
	[ENDIF]
	최소소환번호 = 소환물번호:0
	; 최소 체력
	최소소환시간 = 총력전_체력:(소환물번호:0)
	FOR iTmp, 1, 제한수
		IF 총력전_체력:(소환물번호:iTmp) < 최소소환시간
			최소소환번호 = 소환물번호:iTmp
			최소소환시간 = 총력전_체력:(소환물번호:iTmp)
		ENDIF
	NEXT
ELSE
	최소소환번호 = 소환물번호:0
	최소소환시간 = 총력전_카운터_소비양:(소환물번호:0):소환물지속카운터번호
	FOR iTmp, 1, 제한수
		IF 총력전_카운터_소비양:(소환물번호:iTmp):소환물지속카운터번호 < 최소소환시간
			최소소환번호 = 소환물번호:iTmp
			최소소환시간 = 총력전_카운터_소비양:(소환물번호:iTmp):소환물지속카운터번호
		ENDIF
	NEXT
ENDIF
; 제거
TRYCALLFORM 총력전_소환_{스킬번호}_해제(최소소환번호)
CALL 총력전_해제_캐릭터(최소소환번호)

; 소환물 수 확인, 소환한 스킬번호로 확인
; 아마 FINDELEMENT 로 최적화 가능 할듯?
@총력전_소환물_수(스킬번호)
#FUNCTION
#DIM 스킬번호

#DIM DYNAMIC iTmp, 2

FOR iTmp, 0, 총력전_캐릭터수
	IF 총력전_상태:iTmp == 총력전_상태_소환 || 총력전_상태:iTmp == 총력전_상태_소한_비공격
		IF 총력전_스킬_번호:iTmp == 스킬번호
			iTmp:1 ++
		ENDIF
	ENDIF
NEXT
RETURNF iTmp:1

; 첫번째 소환물 번호
@총력전_소환물_번호(스킬번호, 시작번호 = 0)
#FUNCTION
#DIM 스킬번호 ; 소환사 총력전 번호
#DIM DYNAMIC 시작번호 ; 이 번호 부터 확인

#DIM DYNAMIC iTmp

FOR iTmp, 시작번호, 총력전_캐릭터수
	IF 총력전_상태:iTmp == 총력전_상태_소환 || 총력전_상태:iTmp == 총력전_상태_소한_비공격
		IF 총력전_스킬_번호:iTmp == 스킬번호
			RETURNF iTmp
		ENDIF
	ENDIF
NEXT
RETURNF -1

; #endregion == 소환물 ==


; #region == 초기화 ==
; 이름, 이미지 초기 구성? (init)
; 캐릭터 스탯이 아닌 정보 초기화, ID 필요
; ====================
; 파티선택중 총력전_ID 만 설정 해놓면 나머지 채우는용
@총력전_초기화_파티선택
#DIM iTmp

CALL 총력전_해제_선택
FOR iTmp, 0, 총력전_캐릭터수
	IF 총력전_ID:iTmp == -1
		CONTINUE
	ENDIF
	총력전_상태:iTmp = 1 ; 파티 선택중 은 보통만 필요
	총력전_이름:iTmp = %ANAME(총력전_ID:iTmp)%
	CALL PRINT_IMAGE_CHARA(총력전_ID:iTmp, "스탠딩", "통상")
	총력전_이미지:iTmp = %RESULTS%
NEXT

; 이름, 이미지, 스킬 처리
; id 있을거라 가정?
@총력전_초기화_캐릭터정보(캐릭터)
#DIM 캐릭터

#DIM DYNAMIC iID
#DIMS CONST skillType = "SP", "BASE", "CAPTURE", "ESCAPE", "PASSIVE" 
#DIM DYNAMIC iTmp, 2
#DIMS DYNAMIC sTmp, 4

총력전_이름:캐릭터 = %ANAME(총력전_ID:캐릭터)%
; ID 없는 캐릭터는 다른데서 처리
iID = 총력전_ID:캐릭터
IF iID >= 0
	CALL 총력전_초기화_이미지(캐릭터)
	총력전_이미지:캐릭터 = %총력전_이미지_초기:캐릭터%
	VARSET iTmp, 0
	iTmp = TALENT:(총력전_ID:캐릭터):웨폰 + 1000
	TRYCCALLFORM 총력전_스킬_{iTmp}_코스트
		총력전_스킬_번호:캐릭터 = iTmp
		sTmp:1 = SKILL_{iTmp}_
		sTmp:2 = _0_NAME
		RESULTS = 
		VARSIZE skillType
		FOR iTmp:1, 0, RESULT
			TRYCALLFORM %sTmp:1%%skillType:(iTmp:1)%%sTmp:2%
			sTmp = %RESULTS%
			IF STRLENS(sTmp:0) > 0
				총력전_스킬_이름:캐릭터 = %sTmp%
				BREAK
			ENDIF
		NEXT
	CATCH
		DEBUGPRINTFORML 스킬 없음:%총력전_이름:캐릭터%:{iTmp}
		총력전_스킬_번호:캐릭터 = -1
	ENDCATCH
ENDIF
DEBUGPRINTFORML skill chose for {iID}:{총력전_스킬_번호:캐릭터}
; 스킬 처리
CALL 총력전_스킬코스트(캐릭터)

@총력전_초기화_이미지(캐릭터)
#DIM 캐릭터

; #DIM DYNAMIC 팀번호
#DIM DYNAMIC 아군, 총력전_캐릭터수 ; 나중에 ERH 에 팀 사이즈 CONST?
#DIM DYNAMIC 적군, 총력전_캐릭터수
#DIM DYNAMIC iTmp

VARSET 아군, -1
VARSET 적군, -1

FOR iTmp, 0, 총력전_캐릭터수
	SIF iTmp == 캐릭터 || 총력전_ID:iTmp < 0
		CONTINUE
	; 나중에 추가: 팀 확인

	IF 총력전_팀:캐릭터 == 총력전_팀:캐릭터
		ARRAYSHIFT 아군, 1, 총력전_ID:iTmp
	ELSE
		ARRAYSHIFT 적군, 1, 총력전_ID:iTmp
	ENDIF 
NEXT

CALL GET_IMAGE_BATTLE(총력전_ID:캐릭터, 아군, 적군)
총력전_이미지_초기:캐릭터 = %RESULTS%

@총력전_초기화_스탯_상효(캐릭터)
#DIM 캐릭터

총력전_최대체력_상효:캐릭터 = 0
총력전_공격력_상효:캐릭터 = 0
총력전_방어력_상효:캐릭터 = 0
총력전_명중률_상효:캐릭터 = 0
총력전_회피율_상효:캐릭터 = 0
총력전_치유력_상효:캐릭터 = 0
총력전_치명타_상효:캐릭터 = 0
총력전_치명타_저항_상효:캐릭터 = 0
총력전_치명타_대미지_상효:캐릭터 = 0
총력전_치명타_대미지_저항_상효:캐릭터 = 0
총력전_군중제어_한계_상효:캐릭터 = 0
총력전_군중제어_강화_상효:캐릭터 = 0
총력전_군중제어_저항_상효:캐릭터 = 0

@총력전_초기화_상태효과_적용(캐릭터, 효과방식)
#DIM 캐릭터
#DIM 효과방식

#DIM DYNAMIC iTmp

FOR iTmp, 0, 총력전_상태효과수
	SIF 총력전_상효_종류:캐릭터:iTmp == 0
		BREAK
	IF 총력전_상효_효과방식_0:캐릭터:iTmp == 효과방식
		총력전_상효_적용:캐릭터:iTmp = 0
	ENDIF
NEXT

; 범위 기본세팅, 범위스킬시 목표주변 위치 번호
; 4 줄
; 해제는 -1 로 설정됨
@총력전_초기화_범위
#DIM CONST 줄당캐릭터수 = 5
; #DIM 범위, 4
#DIM DYNAMIC iTmp, 4

; -- 적군 --
; 15 16 17 18 19
; 10 11 12 13 14
; -- 아군 --
; 0  1  2  3  4
; 5  6  7  8  9

FOR iTmp, 0, 총력전_캐릭터수
	iTmp:1 = 0
	; 우 + 같은 줄
	iTmp:2 = iTmp + 1
	IF iTmp:2 < 총력전_캐릭터수 && iTmp:2 / 줄당캐릭터수 == iTmp / 줄당캐릭터수
		총력전_범위:iTmp:(iTmp:1) = iTmp:2
		iTmp:1 ++
	ENDIF
	; 좌 + 같은 줄
	iTmp:2 = iTmp - 1
	IF iTmp:2 >= 0 && iTmp:2 / 줄당캐릭터수 == iTmp / 줄당캐릭터수
		총력전_범위:iTmp:(iTmp:1) = iTmp:2
		iTmp:1 ++
	ENDIF
	; 앞 + 뒤
	SELECTCASE iTmp / 줄당캐릭터수
		CASE 0
			iTmp:2 = iTmp + 줄당캐릭터수 * 2
			IF iTmp:2 < 총력전_캐릭터수
				총력전_범위:iTmp:(iTmp:1) = iTmp:2
				iTmp:1 ++
			ENDIF
			iTmp:2 = iTmp + 줄당캐릭터수
			IF iTmp:2 < 총력전_캐릭터수
				총력전_범위:iTmp:(iTmp:1) = iTmp:2
				iTmp:1 ++
			ENDIF
		CASE 1, 3
			iTmp:2 = iTmp - 줄당캐릭터수
			IF iTmp:2 >= 0
				총력전_범위:iTmp:(iTmp:1) = iTmp:2
				iTmp:1 ++
			ENDIF
		CASE 2
			iTmp:2 = iTmp + 줄당캐릭터수
			IF iTmp:2 < 총력전_캐릭터수
				총력전_범위:iTmp:(iTmp:1) = iTmp:2
				iTmp:1 ++
			ENDIF
			iTmp:2 = iTmp - 줄당캐릭터수 * 2
			IF iTmp:2 >= 0
				총력전_범위:iTmp:(iTmp:1) = iTmp:2
				iTmp:1 ++
			ENDIF
	ENDSELECT
NEXT

; #endregion == 초기 ==

; #region == 해제 ==
; 총력전 정보 지우기
; ==================
; 전체 해제
@총력전_해제
CALL 총력전_해제_보스
CALL 총력전_해제_턴
CALL 총력전_해제_기본
CALL 총력전_해제_위치
CALL 총력전_해제_텍스트
CALL 총력전_해제_스킬
CALL 총력전_해제_스탯
CALL 총력전_해제_상태이상
CALL 총력전_해제_카운터
CALL 총력전_해제_엄폐물_전체
총력전_캐릭터정보 = -1

; 캐릭터 하나 리셋, 거의 소환물 용
@총력전_해제_캐릭터(캐릭터)
#DIM 캐릭터
#DIM DYNAMIC iTmp

총력전_상태:캐릭터 = 0
총력전_ID:캐릭터 = -1
총력전_이름:캐릭터 = 
총력전_팀:캐릭터 = 0
총력전_이미지_초기:캐릭터 = 
총력전_이미지:캐릭터 = 
총력전_공격잔여:캐릭터 = 0
총력전_스킬_이름:캐릭터 = 
총력전_스킬_번호:캐릭터 = 0
총력전_스킬_가변:캐릭터 = 0
총력전_스킬_쿨다운:캐릭터 = 0
총력전_스킬_코스트:캐릭터 = 0
총력전_최대체력_최초:캐릭터 = 0
총력전_최대체력:캐릭터 = 0
총력전_최대체력_상효:캐릭터 = 0
총력전_체력:캐릭터 = 0
총력전_공격력_최초:캐릭터 = 0
총력전_공격력:캐릭터 = 0
총력전_공격력_상효:캐릭터 = 0
총력전_방어력_최초:캐릭터 = 0
총력전_방어력:캐릭터 = 0
총력전_방어력_상효:캐릭터 = 0
총력전_명중률_최초:캐릭터 = 0
총력전_명중률:캐릭터 = 0
총력전_명중률_상효:캐릭터 = 0
총력전_회피율_최초:캐릭터 = 0
총력전_회피율:캐릭터 = 0
총력전_회피율_상효:캐릭터 = 0
총력전_치유력_최초:캐릭터 = 0
총력전_치유력:캐릭터 = 0
총력전_치유력_상효:캐릭터 = 0
총력전_치명타_최초:캐릭터 = 0
총력전_치명타:캐릭터 = 0
총력전_치명타_상효:캐릭터 = 0
총력전_치명타_저항_최초:캐릭터 = 0
총력전_치명타_저항:캐릭터 = 0
총력전_치명타_저항_상효:캐릭터 = 0
총력전_치명타_대미지_최초:캐릭터 = 0
총력전_치명타_대미지:캐릭터 = 0
총력전_치명타_대미지_상효:캐릭터 = 0
총력전_치명타_대미지_저항_최초:캐릭터 = 0
총력전_치명타_대미지_저항:캐릭터 = 0
총력전_치명타_대미지_저항_상효:캐릭터 = 0
총력전_군중제어_한계_최초:캐릭터 = 0
총력전_군중제어_한계:캐릭터 = 0
총력전_군중제어_한계_상효:캐릭터 = 0
총력전_군중제어:캐릭터 = 0
총력전_군중제어_강화_최초:캐릭터 = 0
총력전_군중제어_강화:캐릭터 = 0
총력전_군중제어_강화_상효:캐릭터 = 0
총력전_군중제어_저항_최초:캐릭터 = 0
총력전_군중제어_저항:캐릭터 = 0
총력전_군중제어_저항_상효:캐릭터 = 0

FOR iTmp, 0, 총력전_상태효과수
	CALL 총력전_상태효과_제거(캐릭터, 0)
NEXT
FOR iTmp, 0, 총력전_카운터수
	CALL 총력전_카운터_제거(캐릭터, 0)
NEXT


@총력전_해제_엄폐물_전체
#DIM DYNAMIC iTmp
FOR iTmp, 0, 총력전_캐릭터수
	CALL 총력전_해제_엄폐물(iTmp)
NEXT

; 엄폐물 하나 제거
@총력전_해제_엄폐물(엄폐물)
#DIM 엄폐물

#DIM DYNAMIC iTmp

FOR iTmp, 0, 2	
	총력전_엄폐물_소비방식:엄폐물:iTmp = 0
	총력전_엄폐물_소비양:엄폐물:iTmp = 0
NEXT
총력전_엄폐물_스킬번호:엄폐물 = 0
총력전_엄폐물_추가번호:엄폐물 = 0
총력전_엄폐물_팀:엄폐물 = 0
총력전_엄폐물_위치_부착:엄폐물 = 0
; 총력전_엄폐물_스킬방식:엄폐물 = 0

; 파티 선택중 리셋용
@총력전_해제_선택
VARSET 총력전_상태, 0
VARSET 총력전_이름, ""
VARSET 총력전_이미지_초기, ""
VARSET 총력전_이미지, ""

@총력전_해제_보스
총력전_보스 = -1
; 총력전_보스_이름 =  ; 필요 없을수도?
총력전_보스_난이도 = 0
총력전_보스_페이즈 = 0
총력전_보스_시전중 = 0
총력전_보스_시전스킬 = -1
VARSET 총력전_보스_쿨다운, 0
VARSET 총력전_보스_조준, -1
; 임시?
VARSET 총력전_범위, -1

@총력전_해제_턴
총력전_턴수 = 1
총력전_턴_종료 = 30
총력전_전투단계 = 0

@총력전_해제_기본
VARSET 총력전_ID, -1 ; 차라리 문제 있으면 오류나게
VARSET 총력전_팀, 0
VARSET 총력전_공격잔여, 0
CALL 총력전_해제_선택

; 위치를 0 ~ 총력전_캐릭터수 로 설정
@총력전_해제_위치
#DIM iTmp
FOR iTmp, 0, 총력전_캐릭터수
	총력전_위치:iTmp = iTmp
	총력전_엄폐물_위치:iTmp = iTmp
NEXT

@총력전_해제_텍스트
VARSET 총력전_텍스트, ""
VARSET 총력전_텍스트_색상, "#C0C0C0"
; 총력전_텍스트_최대행수 = 0
총력전_텍스트_표시행 = 0
; 임시
VARSET 총력전_접두사_이름, ""

@총력전_해제_스킬
총력전_코스트_최대 = 10
총력전_코스트 = 5
총력전_코스트_회복력_최초 = 300
총력전_코스트_회복력 = 0
VARSET 총력전_스킬_시전, -1

VARSET 총력전_스킬_이름, ""
VARSET 총력전_스킬_번호, 0
VARSET 총력전_스킬_가변, 0
VARSET 총력전_스킬_쿨다운, 0

@총력전_해제_스탯
VARSET 총력전_최대체력_최초, 0
VARSET 총력전_최대체력, 0
VARSET 총력전_체력, 0
VARSET 총력전_공격력_최초, 0
VARSET 총력전_공격력, 0
VARSET 총력전_방어력_최초, 0
VARSET 총력전_방어력, 0
VARSET 총력전_명중률_최초, 0
VARSET 총력전_명중률, 0
VARSET 총력전_회피율_최초, 0
VARSET 총력전_회피율, 0
VARSET 총력전_치유력_최초, 0
VARSET 총력전_치유력, 0

VARSET 총력전_치명타_최초, 0
VARSET 총력전_치명타, 0
VARSET 총력전_치명타_저항_최초, 0
VARSET 총력전_치명타_저항, 0
VARSET 총력전_치명타_대미지_최초, 0
VARSET 총력전_치명타_대미지, 0
VARSET 총력전_치명타_대미지_저항_최초, 0
VARSET 총력전_치명타_대미지_저항, 0
VARSET 총력전_군중제어_한계_최초, 0
VARSET 총력전_군중제어_한계, 0
VARSET 총력전_군중제어_한계_상효, 0
VARSET 총력전_군중제어, 0
VARSET 총력전_군중제어_강화_최초, 0
VARSET 총력전_군중제어_강화, 0
VARSET 총력전_군중제어_강화_상효, 0
VARSET 총력전_군중제어_저항_최초, 0
VARSET 총력전_군중제어_저항, 0
VARSET 총력전_군중제어_저항_상효, 0

@총력전_해제_상태이상
VARSET 총력전_상효_종류, 0
VARSET 총력전_상효_양, 0
VARSET 총력전_상효_긍부정, 0
VARSET 총력전_상효_시전자, 0
VARSET 총력전_상효_스킬번호, 0
VARSET 총력전_상효_추가번호, 0
VARSET 총력전_상효_효과방식_0, 0
VARSET 총력전_상효_소비방식_0, 0
VARSET 총력전_상효_소비양_0, 0
VARSET 총력전_상효_적용, 0

@총력전_해제_카운터
VARSET 총력전_카운터_증가방식, 0
VARSET 총력전_카운터_증가양, 0
; VARSET 총력전_카운터_증가양_최대, 0
VARSET 총력전_카운터_소비방식, 0
VARSET 총력전_카운터_소비양, 0
VARSET 총력전_카운터_시전자, 0
VARSET 총력전_카운터_스킬번호, 0
VARSET 총력전_카운터_추가번호, 0

; #endregion == 해제 ==

; #region == Utility ==
; =====================
; 캐릭터 상태
@총력전_캐릭터상태(캐릭터)
#FUNCTION
#DIM 캐릭터 ; 총력전 번호
; 총력전 상태
IF 캐릭터 == -1
	RETURNF 0
ELSE
	RETURNF 총력전_상태:캐릭터
ENDIF

; 범위 안 캐릭터
; 옵션2: RESULT:0 인원수, RESULT:1 ~ RESULT:N, 팀 총력전 번호
; 안쓰이는중... 목표선택에서 해결중
@총력전_범위내_팀(팀, 시작위치, 범위)
#DIM 팀
#DIM 시작위치
#DIM 범위

#DIM iTmp, 3

VARSET RESULT, -1
iTmp:2 = 0
FOR iTmp, 시작위치, 시작위치 + 범위
	iTmp:1 = FINDELEMENT(총력전_위치, iTmp)
	IF 총력전_팀:(iTmp:1) == 팀
		RESULT:(iTmp:2) = iTmp:1
		iTmp:2++
	ENDIF
NEXT
; 없으면 RESULT 가 0 으로 변화됨
RETURN RESULT:0

; 공방크리 등등
; (opt1(maxVal - minVal))/(val^2 + opt2*val + opt1) * -1 + maxVal
@총력전_계산식_0(val, minVal, maxVal, opt1, opt2)
#FUNCTION
#DIM val
#DIM minVal
#DIM maxVal
#DIM opt1
#DIM opt2
#DIM DYNAMIC iTmp, 2
iTmp:0 = opt1 * (maxVal - minVal)
iTmp:1 = POWER(val, 2) + opt2 * val + opt1
; DEBUGPRINTFORML iTmp:0 {iTmp:0} / iTmp:1 {iTmp:1}
iTmp = DIVIDE_ROUND(iTmp:0, iTmp:1)
; DEBUGPRINTFORM = {iTmp}
iTmp = iTmp * -1 + maxVal
; DEBUGPRINTFORML  * -1 + {maxVal} = {iTmp}
RETURNF iTmp:0

; #endregion == Utility ==