; ====================
; ====================
; #region == 초반 설정 ==
; SHOP_LIFE68_총력전 에서 @총력전_해제 후 ID 와 상태만 세팅된 상태
; 나머진 여기서 세팅
; 실행 -> 시퀀스 -> 턴 -> (시퀀스)게임 오버 확인 -> 시퀀스
; =======================
@총력전_실행 ;(보스)
; #DIM 보스

#DIM DYNAMIC iTmp, 2

; 총력전_보스 = 보스

; 턴수 관련 초기화
TRYCCALLFORM 총력전_보스_턴_종료_{총력전_보스} ; 난이도
	총력전_턴_종료 = RESULT
CATCH
	총력전_턴_종료 = 총력전_턴_종료_기본
ENDCATCH
총력전_턴수 = 1

; 캐릭터 이름 + 이미지
FOR iTmp, 0, 총력전_캐릭터수
	IF 총력전_ID:iTmp >= 0
		CALL 총력전_초기화_캐릭터정보(iTmp)
	ENDIF
NEXT
; CALL 총력전_초기화_캐릭터정보_전

; 보스 정보 + 초기 스탯
CALLFORM 총력전_보스_설정_{총력전_보스}

; 스탯 설정 + 초기화
CALL 총력전_초기화_스탯_전

; 범위 설정
TRYCCALLFORM 총력전_보스_범위_{총력전_보스}
CATCH
	CALL 총력전_초기화_범위
ENDCATCH

; 위치 설정
; CALL 총력전_해제_위치 ; 필요하면 활성화
; 캐릭터 5 ~ 9 로 이동
; trycall 총력전_보스_위치설정?
FOR iTmp, 0, 5
	CALL 총력전_이동_위치(iTmp, iTmp + 5)
NEXT

; [IF_DEBUG]
; FOR LOCAL, 0, 총력전_캐릭터수
; 	DEBUGPRINTFORM 범위:{LOCAL} =
; 	FOR LOCAL:1, 0, 총력전_캐릭터수
; 		DEBUGPRINTFORM {총력전_범위:LOCAL:(LOCAL:1)}|
; 	NEXT
; 	DEBUGPRINTL
; NEXT
; WAIT
; [ENDIF]

; 캐릭터 초기 스킬
FOR iTmp, 0, 총력전_캐릭터수
	IF 총력전_팀:iTmp == 0 && 총력전_상태:iTmp == 총력전_상태_보통
		TRYCALLFORM 총력전_스킬_{총력전_스킬_번호:iTmp}_초기(iTmp)
	ENDIF
NEXT

; 보스 초기 스킬
TRYCALLFORM 총력전_보스_스킬_초기_{총력전_보스}

CALL 총력전_시퀀스 ;(총력전_보스)
; CALL 총력전_시퀀스

; #region == 시퀀스 ==
; 총력전_턴_종료 에 따라
; 총력전_턴수 사용
; ====================
@총력전_시퀀스 ;(보스)
; #DIM 보스 ; 총력전_보스 가 있는데?

#DIM DYNAMIC uiLoop, 3 ; UI AWAIT 타임머?
#DIM DYNAMIC uiAnim ; UI 프레임(?) 수
#DIM DYNAMIC 스킬시전, 5
#DIM DYNAMIC 게임오버
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp, 2

DEBUGCLEAR

$SEQUENCE_LOOP
TRYCCALLFORM 총력전_보스_턴_텍스트
CATCH
	IF 총력전_턴수 == 총력전_턴_종료
		sTmp = [마지막 턴 입니다]
	ELSEIF 총력전_턴수 >= 총력전_턴_종료 - 10
		sTmp = [{총력전_턴_종료 - 총력전_턴수}턴 남음]
	ELSE
		sTmp = [{총력전_턴수} 턴]
	ENDIF
	sTmp = ------ %ALIGN_TEXT(sTmp, 18, "CENTER")% ------
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_초록)
ENDCATCH
; 스탯 계산
; 지속 상태효과 적용됨
CALL 총력전_처리_스탯_전

; 보스 페이즈 판단
TRYCALLFORM 총력전_보스_페이즈_판단_{총력전_보스}

; 엄폐물 스킬, 위치 순으로
CALL 총력전_시퀀스_스킬시전_엄폐물

; 플레이어 턴 + 스킬 선택
총력전_전투단계 = 총력전_전투단계_플레이어
CALL 총력전_시퀀스_플레이어
IF 총력전_전투단계 == 총력전_전투단계_종료
	GOTO END_RAID
ENDIF
; CALL 총력전_시퀀스_종료확인

; 군중제어 감소
FOR iTmp, 0, 총력전_캐릭터수
	; if 보스? trycall 보스?
	CALL 총력전_처리_군중제어_감소(iTmp)
NEXT
; 스킬 쿨다운
FOR iTmp, 0, 총력전_캐릭터수
	총력전_스킬_쿨다운:iTmp = MAX(총력전_스킬_쿨다운:iTmp - 1, 0)
NEXT
[IF_DEBUG]
sTmp = 
[ENDIF]
VARSIZE 총력전_보스_쿨다운
FOR iTmp, 0, RESULT
	IF 총력전_보스_쿨다운:iTmp > 0
		총력전_보스_쿨다운:iTmp --
		[IF_DEBUG]
		IF STRLENS(sTmp) == 0
			sTmp += @"보스스킬 쿨 "
		ENDIF
		sTmp += @"{iTmp}={총력전_보스_쿨다운:iTmp} "
		[ENDIF]
	ENDIF
NEXT
[IF_DEBUG]
IF STRLENS(sTmp) > 0
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
ENDIF
[ENDIF]


; 스킬 캐릭터
총력전_전투단계 = 총력전_전투단계_스킬
CALL 총력전_시퀀스_스킬시전(총력전_상태_보통)
CALL 총력전_시퀀스_스킬시전(총력전_상태_소환)

; 캐릭터 공격
총력전_전투단계 = 총력전_전투단계_기본공격
CALL 총력전_시퀀스_기본공격(0, 0)
; CALL 총력전_시퀀스_기본공격(0, 0)

; 보스 스킬/조준
총력전_전투단계 = 총력전_전투단계_보스스킬
CALL 총력전_시퀀스_스킬시전(총력전_상태_보스)
; sTmp = 보스 스킬 시전
; sTmp = ------ %ALIGN_TEXT(sTmp, 18, "CENTER")% ------
; CALL 총력전_UI_텍스트_추가(sTmp, 칼라_초록)
; CALLFORM 총력전_보스_시퀀스_스킬_{보스}

; 보스 공격
총력전_전투단계 = 총력전_전투단계_보스공격
CALL 총력전_시퀀스_기본공격(1, 10)

; 턴 종료
sTmp = 턴 종료
sTmp = ------ %ALIGN_TEXT(sTmp, 18, "CENTER")% ------
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_초록)
; 상태이상 적용: 턴
FOR iTmp, 0, 총력전_캐릭터수
	CALL 총력전_상태효과_적용_기타(iTmp, 총력전_방식_턴)
NEXT

; 상태이상/카운터 소비: 턴
FOR iTmp, 0, 총력전_캐릭터수
	CALL 총력전_카운터_증가(iTmp, -1, 총력전_방식_턴)
	CALL 총력전_카운터_소비(iTmp, 총력전_방식_턴)
	CALL 총력전_상태효과_소비(iTmp, 총력전_방식_턴)
	CALL 총력전_엄폐물_소비(iTmp, 총력전_방식_턴, 1)
NEXT

; 추가 행동 불능 확인 + 턴 상태효과 종료?
; 필요 없을수도...
FOR iTmp, 0, 총력전_캐릭터수
	CALL 총력전_확인_행동불능(iTmp)
	CALL 총력전_초기화_스탯_상효(iTmp)
NEXT

; 스킬 코스트 회복
; 회복력으로 코스트 추가
; 기본 회복력 추가, 함수로?
총력전_코스트_회복력 += 총력전_코스트_회복력_최초
iTmp = 총력전_코스트_회복력 / 100
총력전_코스트 = MIN(총력전_코스트 + iTmp, 총력전_코스트_최대)
; DEBUGPRINTFORML 코스트 회복력(전):{총력전_코스트_회복력}
총력전_코스트_회복력 = 총력전_코스트_회복력 % 100
; DEBUGPRINTFORML 코스트 회복력(후):{총력전_코스트_회복력}

총력전_턴수 ++
VARSET 총력전_상효_적용, 0
$END_RAID
RESULT = 0
CALL 총력전_시퀀스_종료확인
IF RESULT == 1
	RETURN
ENDIF
GOTO SEQUENCE_LOOP
; IF 총력전_턴수 <= 총력전_턴_종료
; ENDIF

; 게임 오버

; #endregion == 시퀀스 ==

; #region == 플레이어 ==
; 스킬 선택
; =========================
@총력전_시퀀스_플레이어
#DIM DYNAMIC testMove
#DIM DYNAMIC 코스트합
#DIM DYNAMIC 전투단계저장
; #DIM DYNAMIC 시전중, 총력전_캐릭터수
#DIM DYNAMIC iTmp, 5
#DIMS DYNAMIC sTmp

전투단계저장 = 총력전_전투단계
; 시작전 코스트 계산
FOR iTmp, 0, 총력전_캐릭터수
	CALL 총력전_스킬코스트(iTmp)
NEXT
CALL 총력전_UI_텍스트_추가("스킬 선택: 무기 선택으로 설정", 칼라_노랑)
testMove = -1
$INPUT_LOOP
; [IF_DEBUG]
; DEBUGCLEAR
; CALL DEBUG_총력전_전
; [ENDIF]
; 타입(버튼 활성화)
IF testMove >= 0
	CALL 총력전_UI_Main(총력전_선택_아군지역)
ELSE
	CALL 총력전_UI_Main(총력전_선택_캐릭터)
ENDIF

INPUT
CLEARLINE 1
; -1 턴 종료
; 0 ~ 총력전_캐릭터수 캐릭터 버튼
; 총력전_캐릭터수 ~ (총력전_캐릭터수*2) 스킬 버튼
; 3턴 안에 중단 시 재도전 가능합니다 토벌을 중단합니까?
IF 총력전_전투단계 == 총력전_전투단계_종료
	IF RESULT == -99
		; 종료, 3 턴 확인은 총력전_시퀀스_종료확인 에서 처리
		; 총력전_전투단계 = 총력전_전투단계_종료
		RETURN
	ENDIF
	총력전_전투단계 = 전투단계저장
	sTmp = 총력전 중단 취소
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
	; 종료 텍스트 정리
	CALL 총력전_UI_텍스트_제거(2)
	GOTO INPUT_LOOP
ENDIF
SELECTCASE RESULT
	CASE -1 ; 턴 실행
		; 총력전_캐릭터정보 = -1
		; 총력전_텍스트_표시행 = 0
		; CALL 총력전_UI_Main(0)
		; RETURN
	CASE -5 ; 텍스트 UP
		; 텍스트 표시 쪽 에서 MAX 한번더 계산 필요함, 출력 줄 수에 따라
		총력전_텍스트_표시행 = LIMIT(총력전_텍스트_표시행 + 1, 0, 총력전_텍스트_최대행수 - 1)
		GOTO INPUT_LOOP
	CASE -6 ; 텍스트 DOWN
		총력전_텍스트_표시행 = LIMIT(총력전_텍스트_표시행 - 1, 0, 총력전_텍스트_최대행수 - 1)
		GOTO INPUT_LOOP
	CASE -7 ; 텍스트 최하단
		총력전_텍스트_표시행 = 0
		GOTO INPUT_LOOP
	CASE -99 ; 종료
		IF 총력전_턴수 <= 3
			sTmp = 3턴 안에 중단 시 재도전 가능합니다 토벌을 중단합니까?
		ELSE
			sTmp = 토벌을 중단합니까?
		ENDIF
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
		총력전_전투단계 = 총력전_전투단계_종료
		GOTO INPUT_LOOP
	CASE IS < 0
		; lazy bug prevention
		GOTO INPUT_LOOP
	CASE IS < 총력전_캐릭터수
		IF 총력전_캐릭터정보 == RESULT
			총력전_캐릭터정보 = -1
		ELSE
			총력전_캐릭터정보 = RESULT
		ENDIF
		GOTO INPUT_LOOP
	CASE IS < 총력전_캐릭터수 * 2
		iTmp = RESULT - 총력전_캐릭터수
		iTmp:1 = FINDELEMENT(총력전_스킬_시전, iTmp)
		; DEBUGPRINTFORML 스킬:{iTmp}, found:{iTmp:1}
		IF iTmp:1 >= 0
			; 시전 취소
			CALL ARRAYREMOVE_VAL(총력전_스킬_시전, iTmp:1, 1, -1)
			코스트합 -= 총력전_스킬_코스트:iTmp
			; ARRAYREMOVE 총력전_스킬_시전, iTmp:1, 1
		ELSEIF 코스트합 + 총력전_스킬_코스트:(iTmp) > 총력전_코스트
			; 코스트 초과
			총력전_텍스트_표시행 = 0
			CALL 총력전_UI_텍스트_추가("코스트가 부족합니다", 칼라_노랑)
		ELSE
			iTmp:1 = FINDELEMENT(총력전_스킬_시전, -1)
			총력전_스킬_시전:(iTmp:1) = iTmp
			코스트합 += 총력전_스킬_코스트:iTmp
		ENDIF
		GOTO INPUT_LOOP
ENDSELECT
; 버그 방지?
총력전_캐릭터정보 = -1
총력전_텍스트_표시행 = 0
CALL 총력전_UI_Main(0)
RETURN

; #endregion == 플레이어 ==

; #region == 스킬 ==
; 스킬 시전
; 코스트, 시전 순서 대로
; =====================
@총력전_시퀀스_스킬시전(시전상태)
#DIM 시전상태 ; 총력전_상태
#DIM DYNAMIC 시전자
#DIM DYNAMIC iTmp, 2
#DIMS DYNAMIC sTmp

; 시작 텍스트
SELECTCASE 시전상태
	CASE 총력전_상태_보통
		sTmp = 스킬 시전
	CASE 총력전_상태_보스
		sTmp = 보스 스킬 시전
	CASE 총력전_상태_소환, 총력전_상태_소한_비공격
		sTmp = 소환물 스킬 시전
	CASEELSE
		sTmp = ERR:시전상태={시전상태}
ENDSELECT
sTmp = ------ %ALIGN_TEXT(sTmp, 18, "CENTER")% ------
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_초록)
; 스킬 시전
FOR iTmp, 0, 총력전_캐릭터수
	; 시전 끝 확인
	SIF 시전상태 == 총력전_상태_보통 && 총력전_스킬_시전:iTmp == -1
		BREAK
	; CONTINUE 확인
	iTmp:1 = 총력전_캐릭터상태(iTmp)
	SELECTCASE 시전상태
		CASE 총력전_상태_보스
			SIF iTmp:1 != 총력전_상태_보스
				CONTINUE
		CASE 총력전_상태_소환, 총력전_상태_소한_비공격
			SIF iTmp:1 != 총력전_상태_소환 && iTmp:1 != 총력전_상태_소한_비공격
				CONTINUE
	ENDSELECT
	; 시전자 세팅
	IF 시전상태 == 총력전_상태_보통
		시전자 = 총력전_스킬_시전:iTmp
	ELSE
		시전자 = iTmp
	ENDIF
	; CC중이면 스킵
	CALL 총력전_처리_군중제어_적용(시전자)
	IF RESULT == 1
		; 보스면 시전중인 스킬 취소
		CALL 총력전_보스_스킬종료
		sTmp = %총력전_이름:시전자% 행동 불가!
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
		CALL 총력전_UI_Main(0)
		WAITANYKEY
		CONTINUE
	ENDIF
	; 스킬 시전
	SELECTCASE 시전상태
		CASE 총력전_상태_보통
			IF 총력전_스킬_코스트:시전자 <= 총력전_코스트
				총력전_코스트 -= 총력전_스킬_코스트:시전자
				CALL 총력전_처리_스킬(시전자)
				; 시전중:시전자 == 0 스킬_시전 에서 제거
			ENDIF
			; else 코스트 부족 텍스트?
		CASE 총력전_상태_보스
			CALLFORM 총력전_보스_시퀀스_스킬_{총력전_보스}
		CASE 총력전_상태_소환, 총력전_상태_소한_비공격
			CALL 총력전_처리_스킬_소환물(시전자)
	ENDSELECT
	IF 시전상태 == 총력전_상태_보스
		; 보스면 (지금은) 한번 하고 끝
		; 나중에 (방법찾으면) 보스 스킬도 비슷하게 처리
		BREAK
	ENDIF
NEXT
; 시전중:캐릭터 안 쓰는 동안
IF 시전상태 == 총력전_상태_보통
	VARSET 총력전_스킬_시전, -1
ENDIF

; 위치순으로 엄폐물 스킬 시전/버프
@총력전_시퀀스_스킬시전_엄폐물
#DIM DYNAMIC 엄폐물번호
#DIM DYNAMIC iTmp

FOR iTmp, 0, 총력전_캐릭터수
	엄폐물번호 = FINDELEMENT(총력전_엄폐물_위치, iTmp)
	; 스킬 번호 trycall
	TRYCALLFORM 총력전_엄폐물_{총력전_엄폐물_스킬번호:엄폐물번호}_{총력전_엄폐물_추가번호:엄폐물번호}_스킬(엄폐물번호)
NEXT

; 스킬 시전시 목표 선택
; 스킬에서 대상 사이즈 결정, 여기서 대상 수정
@총력전_시퀀스_목표선택(대상, type, 중복선택 = 0)
#DIM REF 대상, 0
#DIM type
#DIM 중복선택

#DIM DYNAMIC 대상수 ; VARSIZE 대상
#DIM DYNAMIC 대상가능 ; 선택 가능한 대상수
#DIM DYNAMIC 선택끝수 ; 마지막 선택 취소 + 대상수 비교
#DIM DYNAMIC iTmp, 2
#DIMS DYNAMIC sTmp

VARSIZE 대상
대상수 = RESULT

; UI_Main 에 type 에 따라, 자동 조준 시도
; 가능한 대상이 한명, 또는 가능한 대상이 대상수 보다 적고, 중복선택 불가시
; ...반격 스킬/등 일부러 안 맞춰야(버프 포함?) 하는 적/아군 생기면 수정 필요. 자동조준 버튼 추가?
SIF 중복선택 == 1
	GOTO INPUT_SELECT
선택끝수 = 0
VARSET 대상, -1
FOR iTmp, 0, 총력전_캐릭터수
	IF 총력전_상태:iTmp == 0
		CONTINUE
	ENDIF
	SELECTCASE type
		; 나중에 아군 적군 처리 업데이트시 수정
		CASE 총력전_선택_아군
			; 행동 가능한 아군...일 거라 가정
			; 부활 스킬 생기면 수정 필요
			SIF 총력전_팀:iTmp != 0
				CONTINUE
			IF 총력전_상태:iTmp == 총력전_상태_보통 || 총력전_상태:iTmp == 총력전_상태_소환
				; 자동 조준 불가
				SIF 선택끝수 == 대상수
					GOTO INPUT_SELECT
				대상:선택끝수 = iTmp
				선택끝수 ++
			ENDIF
		CASE 총력전_선택_적군
			; 행동 가능한 적군일 거라 가정
			SIF 총력전_팀:iTmp != 1
				CONTINUE
			; 보통일 경우는 없을거 같지만...
			IF 총력전_상태:iTmp == 총력전_상태_보통 || 총력전_상태:iTmp == 총력전_상태_소환 || 총력전_상태:iTmp == 총력전_상태_보스
				; 자동 조준 불가
				SIF 선택끝수 == 대상수
					GOTO INPUT_SELECT
				대상:선택끝수 = iTmp
				선택끝수 ++
			ENDIF
	ENDSELECT
NEXT
; 가능한 대상 수 보다 선택 가능한 대상 수가 많으면 스킵?
IF 대상:0 != -1	
	; 자동 조준 성공
	GOTO SKIP_SELECT
ENDIF


$INPUT_SELECT
선택끝수 = 0
VARSET 대상, -1
sTmp = dummyLine
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_회색)

$INPUT_LOOP
; WHILE 선택끝수 < 대상수 ; GOTO 로 변경?
CALL 총력전_UI_텍스트_제거(1)
sTmp = 선택 ({선택끝수}/{대상수})
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
CALL 총력전_UI_Main(type, 1)
INPUT
CLEARLINE 1

SELECTCASE RESULT
	CASE -1, -99 ; 선택 종료
		GOTO SKIP_SELECT
	CASE -2 ; 전 선택 취소
		iTmp = MAX(선택끝수 - 1, 0)
		CALL ARRAYREMOVE_VAL(대상, iTmp, 1, -1)
		SIF 선택끝수 > 0
			선택끝수 --
		; GOTO INPUT_LOOP
	CASE -3 ; 선택 리셋
		VARSET 대상, -1
		선택끝수 = 0
		; GOTO INPUT_LOOP
	CASE -5 ; 텍스트 UP
		; 텍스트 표시 쪽 에서 MAX 한번더 계산 필요함, 출력 줄 수에 따라
		총력전_텍스트_표시행 = LIMIT(총력전_텍스트_표시행 + 1, 0, 총력전_텍스트_최대행수 - 1)
		; GOTO INPUT_LOOP
	CASE -6 ; 텍스트 DOWN
		총력전_텍스트_표시행 = LIMIT(총력전_텍스트_표시행 - 1, 0, 총력전_텍스트_최대행수 - 1)
		; GOTO INPUT_LOOP
	CASE -7 ; 텍스트 최하단
		총력전_텍스트_표시행 = 0
		; GOTO INPUT_LOOP
	CASE IS < 0 ; 버그 방지
		; GOTO INPUT_LOOP
	CASE IS < 총력전_캐릭터수 * 2
		; RESULT 수정
		IF RESULT >= 총력전_캐릭터수
			iTmp:1 = RESULT - 총력전_캐릭터수
		ELSE
			iTmp:1 = RESULT
		ENDIF
		iTmp = FINDELEMENT(대상, iTmp:1)
		IF iTmp >= 0 && 중복선택 == 0
			; 중복선택 불가 + 이미 선택돼 있으면
			CALL ARRAYREMOVE_VAL(대상, iTmp, 1, -1)
			선택끝수 --
		ELSE
			대상:선택끝수 = iTmp:1
			선택끝수 ++
		ENDIF
ENDSELECT
; 이름 번호 추가
VARSET 총력전_접두사_이름, ""
FOR iTmp, 0, 대상수
	; DEBUGPRINTFORML 대상:{iTmp} = {대상:iTmp}
	IF 대상:iTmp < 0
		CONTINUE
	ENDIF
	총력전_접두사_이름:(대상:iTmp) = {iTmp}:
NEXT
SIF 선택끝수 < 대상수
	GOTO INPUT_LOOP

$SKIP_SELECT
총력전_텍스트_표시행 = 0
VARSET 총력전_접두사_이름, ""
; DEBUGPRINTFORML tar in func:{대상:0}

; #endregion == 스킬 ==

; #region == 이동 ==
; 캐릭터 1 명 이동, 목표 
; 지금은 팀 1 / 2 만 이동 가능
; 지금은 스턴/행동 불가도 이동 가능
; 일단은 같은 지역에서만 이동 가능
; RESULT:0 = 이동한 캐릭터 번호
; RESULT:1 = 목표 번호, 빈 공간일수도 있음
; 
; 이름 수정? 이동_시전자 -> 이동_1, 이동 -> 이동_2
; ==================
@총력전_시퀀스_이동(팀 = 0)
#DIM 팀

#DIM DYNAMIC 이동유닛 = -1
#DIM DYNAMIC 목표유닛 = -1
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp

; GUI + 텍스트 설정
sTmp = dummyline
CALL 총력전_UI_텍스트_추가(sTmp)
$INPUT_LOOP
; 아니면 삭제할 줄수 저장?
CALL 총력전_UI_텍스트_제거(1)
IF 이동유닛 < 0
	sTmp = 이동할 유닛 선택
ELSE
	sTmp = %조사처리(총력전_이름:이동유닛, "가")% 이동할 목적지 선택
ENDIF
IF 팀 == 1
	; 적군 위치에
	sTmp = 적군 위치에 %sTmp%
	iTmp = 총력전_선택_적군
ELSE
	; 아군 위치에
	sTmp = 아군 위치에 %sTmp%
	IF 이동유닛 < 0
		iTmp = 총력전_선택_아군
	ELSE
		iTmp = 총력전_선택_아군지역
	ENDIF
ENDIF
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
CALL 총력전_UI_Main(iTmp, 1)
INPUT
CLEARLINE 1

; 나중에 총력전 종료 추가?
SELECTCASE RESULT
	CASE -1, -99 ; 스킵
	CASE -2, -3 ; 선택 리셋/취소
		이동유닛 = -1
		GOTO INPUT_LOOP
	CASE -5 ; 로그 위로
		총력전_텍스트_표시행 = LIMIT(총력전_텍스트_표시행 + 1, 0, 총력전_텍스트_최대행수 - 1)
		GOTO INPUT_LOOP
	CASE -6 ; 로그 아래
		총력전_텍스트_표시행 = LIMIT(총력전_텍스트_표시행 - 1, 0, 총력전_텍스트_최대행수 - 1)
		GOTO INPUT_LOOP
	CASE -7 ; 텍스트 최하단
		총력전_텍스트_표시행 = 0
		GOTO INPUT_LOOP
	CASE IS < 0 ; 버그 방지
		GOTO INPUT_LOOP
	CASE IS < 총력전_캐릭터수 * 2 ; 이동
		; RESULT 수정
		IF RESULT >= 총력전_캐릭터수
			iTmp = RESULT - 총력전_캐릭터수
		ELSE
			iTmp = RESULT
		ENDIF
		IF 이동유닛 >= 0
			[IF_DEBUG]
			sTmp = 이동 {이동유닛} - {iTmp}
			CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
			[ENDIF]
			; RESULT:0 = 이동유닛
			목표유닛 = iTmp
			CALL 총력전_이동_번호(이동유닛, iTmp)
		ELSE ; 이동 유닛 설정
			이동유닛 = iTmp
			GOTO INPUT_LOOP
		ENDIF
ENDSELECT
[IF_DEBUG]
CALL 총력전_UI_텍스트_추가("이동:FUNC 종료", 칼라_파노랑)
총력전_텍스트_표시행 = 0
[ENDIF]
; CALL 총력전_UI_Main(0)
; 이동유닛 RESULT 에 저장
; RESULT:0 = 이동유닛
RESULT:1 = 목표유닛
RETURN 이동유닛

; 시전자 이동
; 플래이어 캐릭터만 쓸거라 가정, 아니면 나중에 수정
@총력전_시퀀스_이동_시전자(시전자)
#DIM DYNAMIC 시전자

#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp

; 텍스트 추가
sTmp = %조사처리(총력전_이름:시전자, "가")% 이동할 목적지 선택
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
$INPUT_LOOP
; UI 업데이트
CALL 총력전_UI_Main(총력전_선택_아군지역, 1)
INPUT
CLEARLINE 1
; 나중에 총력전 종료 추가?
SELECTCASE RESULT
	CASE -1, -99 ; 스킵
	; CASE -2, -3 ; 선택 리셋/취소
	; 	이동유닛 = -1
	; 	GOTO INPUT_LOOP
	CASE -5 ; 로그 위로
		총력전_텍스트_표시행 = LIMIT(총력전_텍스트_표시행 + 1, 0, 총력전_텍스트_최대행수 - 1)
		GOTO INPUT_LOOP
	CASE -6 ; 로그 아래
		총력전_텍스트_표시행 = LIMIT(총력전_텍스트_표시행 - 1, 0, 총력전_텍스트_최대행수 - 1)
		GOTO INPUT_LOOP
	CASE -7 ; 텍스트 최하단
		총력전_텍스트_표시행 = 0
		GOTO INPUT_LOOP
	CASE IS < 0 ; 버그 방지
		GOTO INPUT_LOOP
	CASE IS < 총력전_캐릭터수 * 2 ; 이동
		; RESULT 수정
		IF RESULT >= 총력전_캐릭터수
			; iTmp = RESULT % 총력전_캐릭터수
			iTmp = RESULT - 총력전_캐릭터수
		ELSE
			iTmp = RESULT
		ENDIF
		[IF_DEBUG]
		sTmp = 이동 {시전자} - {iTmp}
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
		[ENDIF]
		CALL 총력전_이동_번호(시전자, iTmp)
	CASEELSE ; 버그 방지?
		GOTO INPUT_LOOP
ENDSELECT
; CALL 총력전_UI_Main(0)

; #endregion == 이동 ==


; #region == 기본공격 ==
; 시작위치 -> 시작위치 + 범위 안에있는 팀원 기본 공격 처리
; =============================
; 소환물 공격 따로 할거면 수정 필요
@총력전_시퀀스_기본공격(팀, 시작위치, 범위 = 총력전_캐릭터수)
#DIM 팀
#DIM 시작위치
#DIM DYNAMIC 범위
; #DIM 대상, 총력전_캐릭터수

#DIM DYNAMIC 공
#DIM DYNAMIC 수
#DIM DYNAMIC 적팀, 1
#DIM DYNAMIC iTmp, 3
#DIMS DYNAMIC sTmp

IF 팀 == 1
	sTmp = 보스 공격
	sTmp = ------ %ALIGN_TEXT(sTmp, 18, "CENTER")% ------
ELSE
	sTmp = 기본 공격
	sTmp = ------ %ALIGN_TEXT(sTmp, 18, "CENTER")% ------
ENDIF
CALL 총력전_UI_텍스트_추가(sTmp, 칼라_초록)

iTmp:1 = MIN(시작위치 + 범위, 총력전_캐릭터수)
; sTmp = 공격 시작: 팀({팀}), 시작위치({시작위치}), 범위({범위})({iTmp:1})
; CALL 총력전_UI_텍스트_추가(sTmp, 칼라_파노랑)
FOR iTmp, 시작위치, iTmp:1
	; 공격 캐릭터 선택
	공 = FINDELEMENT(총력전_위치, iTmp)
	; 공격 불가 / 공격 하지 않으면
	SIF 총력전_캐릭터상태(공) <= 0 || 총력전_캐릭터상태(공) == 총력전_상태_행동불능 || 총력전_캐릭터상태(공) == 총력전_상태_보스_행동불능 || 총력전_캐릭터상태(공) == 총력전_상태_소한_비공격 || 총력전_팀:공 != 팀
		CONTINUE
	; CC중이면 스킵
	CALL 총력전_처리_군중제어_적용(공)
	IF RESULT == 1
		sTmp = %총력전_이름:공% 행동 불가!
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
		CALL 총력전_UI_Main(0)
		WAITANYKEY
		CONTINUE
	ENDIF
	; 목표 선택 지금은 팀 0, 1 끼리만 공격 가능
	; 호드 같은 보스 추가시 업데이트 필요
	IF 총력전_팀:공 == 0
		적팀 = 1
	ELSE
		적팀 = 0
	ENDIF
	; 1대1 도발 확인
	; 적팀 도발 확인
	; 나중에 총력전_목표 에 포함
	FOR iTmp:1, 0, 총력전_캐릭터수
		; DEBUGPRINTFORML dummy
		; 위치 에 총력전 번호
		수 = FINDELEMENT(총력전_위치, iTmp:1)
		; 팀 확인
		SIF 총력전_팀:수 != 적팀
			CONTINUE
		; 적 캐릭터가 도발 있으면
		IF 총력전_상태효과_수(수, 상효_종류_도발) > 0
			sTmp = %조사처리(총력전_이름:수, "가")% %조사처리(총력전_이름:공, "를")% 도발 했다!
			CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
			GOTO SKIP_ATK
		ENDIF
	NEXT

	CALL 총력전_목표(적팀, 0, 총력전_캐릭터수)
	IF RESULT == -1
		DEBUGPRINTFORML 목표 없음
		CONTINUE
	ENDIF
	수 = RESULT
	$SKIP_ATK
	; 공격
	CALL 총력전_처리_기본공격(공, 수)
NEXT

; #endregion == 기본공격 ==

; #region == 보스 ==
; #endregion == 보스 ==

; #region == 종료확인 ==
; 게임 종료 확인
; 종료시 RETURN 1
; 종료시 창 클리어 / 버튼 비 활성화 필요
@총력전_시퀀스_종료확인
#DIM DYNAMIC iTmp
#DIMS DYNAMIC sTmp
; 전투단계 종료면, 선택은 시퀀스_플레이어 에서
IF 총력전_전투단계 == 총력전_전투단계_종료
	; 턴수 3~5 이하면? 페널티 없이 종료
	CALL 총력전_UI_텍스트_추가("총력전 종료", 칼라_노랑)
	IF 총력전_턴수 <= 3
		CALL 총력전_UI_텍스트_추가("재시도 가능", 칼라_노랑)
		총력전클리어플래그 = 0
	ELSE
		총력전클리어플래그 = 1
	ENDIF
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
	RETURN 1
ENDIF

;  - 턴수 확인, 30/30 까지 가능... 해야됨
IF 총력전_턴수 > 총력전_턴_종료
	총력전클리어플래그 = 1
	; 실패
	sTmp = 시간 경과
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_빨강)
	sTmp = %총력전_보스_이름% 토벌에 실패했다...
	CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
	; UI 업데이트
	CALL 총력전_UI_Main(0)
	WAITANYKEY
	; GOTO FAIL?
	RETURN 1
ENDIF

; 상태_보스 가 없는지 확인
FOR iTmp, 0, 총력전_캐릭터수
	IF 총력전_상태:iTmp == 총력전_상태_보스
		BREAK
	ENDIF
	IF iTmp == 총력전_캐릭터수 - 1
		총력전클리어플래그 = 1
		; CALL 총력전_전투_텍스트_추가(@"%총력전_보스_이름% 토벌에 성공했다!",칼라_파파랑)
		sTmp = %총력전_보스_이름% 토벌에 성공했다!
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
		; UI 업데이트
		CALL 총력전_UI_Main(0)
		WAITANYKEY
		; 보상 trycall
		CALLFORM 총력전_보스_보상_{총력전_보스}
		; UI 업데이트 + 나가기 버튼 하이라이트?
		RETURN 1
	ENDIF
NEXT

; 상태_보통 이 없는지 확인
FOR iTmp, 0, 총력전_캐릭터수
	IF 총력전_상태:iTmp == 총력전_상태_보통
		BREAK
	ENDIF
	IF iTmp == 총력전_캐릭터수 - 1
		; 실패
		sTmp = %총력전_보스_이름% 토벌에 실패했다...
		CALL 총력전_UI_텍스트_추가(sTmp, 칼라_노랑)
		; UI 업데이트
		CALL 총력전_UI_Main(0)
		WAITANYKEY
		RETURN 1
	ENDIF
NEXT

; $SKIPTOEND
; CLEARLINE LINECOUNT
; 옵션, 보상 텍스트를 여기에

; 실패시 스탯 정리
; @총력전_시퀀스_실패
; 총력전클리어플래그 = 1

; #endregion == 종료확인 ==
